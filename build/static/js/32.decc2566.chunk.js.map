{"version":3,"file":"static/js/32.decc2566.chunk.js","mappings":"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","sources":["pages/Candidate/FacebookMeta/FBMetaLeadFilter.js","pages/Candidate/FacebookMeta/CandidateFaceBookMetaTable.js"],"sourcesContent":["/* eslint-disable default-case */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport FBStyle from \"./candidateFacebookMeta.module.scss\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyModal, numbersOnlyTest } from \"../../../utility\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  Autocomplete,\r\n  FormControl,\r\n  Stack,\r\n  TextField,\r\n  MenuItem,\r\n  Menu,\r\n  InputLabel,\r\n  Select,\r\n} from \"@mui/material\";\r\nimport { FBmetaLeadsSliceActions } from \"../../../redux-store/store\";\r\nimport { GetAllsdminDetails, getJobFilterOptions } from \"../../../apiServices\";\r\nfunction FBinterviewFilter() {\r\n  const FBmetaListFilter = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter\r\n  );\r\n  const FBmetaListFilterRedDot = useSelector(\r\n    (state) => state.FbmetaLeadDetails.refreshRedDot\r\n  );\r\n  const size = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter.size\r\n  );\r\n  const create = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter.createdTime\r\n  );\r\n  const ended = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter.endDate\r\n  );\r\n  const filterDetails = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter\r\n  );\r\n\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const initialState = {\r\n    adminId: isSuperAdmin ? 0 : localStorage.getItem(\"adminID\"),\r\n    candidateName: FBmetaListFilter.candidateName,\r\n    mobileNumber: FBmetaListFilter.mobileNumber,\r\n    educationQualification: FBmetaListFilter.educationQualification,\r\n    preferredLocation: FBmetaListFilter.preferredLocation,\r\n    jobCategory: FBmetaListFilter.jobCategory,\r\n    experience: FBmetaListFilter.experience,\r\n    whatsappNumber: FBmetaListFilter.whatsappNumber,\r\n    joiningAvailability: FBmetaListFilter.joiningAvailability,\r\n    notAttend: FBmetaListFilter.notAttend,\r\n    notQualified: FBmetaListFilter.notQualified,\r\n    noStatus: FBmetaListFilter.noStatus,\r\n    followUp: FBmetaListFilter.followUp,\r\n  };\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [options, setOptions] = useState({\r\n    educationQualification: [],\r\n    jobCategory: [],\r\n  });\r\n  const [dateRange, setDateRange] = useState({\r\n    start: filterDetails.createdTime,\r\n    end: filterDetails.endDate,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n  });\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showCustom, setshowCustom] = useState(false);\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n  const [selectStatus, setSelectStatus] = useState();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const firstTextFieldRef = useRef();\r\n  const secondTextFieldRef = useRef();\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        start: today.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        start: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        end: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        if (numbersOnlyTest(value)) {\r\n          setFormData({ ...formData, [field]: value });\r\n        }\r\n        break;\r\n      case \"jobCategory\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"educationQualification\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"preferredLocation\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"joiningAvailability\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"experience\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n    }\r\n  }\r\n  const Dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      FBmetaLeadsSliceActions.setFBmetaListFilter({\r\n        ...formData,\r\n        createdTime: dateRange.start || create,\r\n        endDate: dateRange.end || ended,\r\n        pages: 1,\r\n        size: size,\r\n        dateFilterType: dateRange.dateFilterType || \"\",\r\n        notAttend: selectStatus,\r\n        notQualified: selectStatus,\r\n        noStatus: selectStatus,\r\n        followUp: selectStatus,\r\n      })\r\n    );\r\n\r\n    const isFilterApplied =\r\n      formData.candidateName ||\r\n      formData.educationQualification ||\r\n      formData.mobileNumber ||\r\n      formData.whatsappNumber ||\r\n      formData.joiningAvailability ||\r\n      formData.adminId ||\r\n      formData.preferredLocation ||\r\n      formData.experience ||\r\n      formData.jobCategory ||\r\n      dateRange.start ||\r\n      dateRange.end;\r\n\r\n    Dispatch(\r\n      FBmetaLeadsSliceActions.setFBmetaListFilterRedDot(isFilterApplied)\r\n    );\r\n    setShowFilter(false);\r\n  };\r\n  const handleKeyPress = (e) => {\r\n    // Check if the Enter key is pressed (key code 13)\r\n    if (e.key === \"Enter\") {\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  function handleAssignToChange(e) {\r\n    const { value } = e.target;\r\n    setFormData((prev) => ({ ...prev, adminId: value }));\r\n  }\r\n\r\n  function handleClear(e) {\r\n    e.preventDefault();\r\n    setFormData({\r\n      adminId: isSuperAdmin ? 0 : localStorage.getItem(\"adminID\"),\r\n      candidateName: \"\",\r\n      mobileNumber: \"\",\r\n      educationQualification: \"\",\r\n      jobCategory: \"\",\r\n      experience: \"\",\r\n      whatsappNumber: \"\",\r\n      joiningAvailability: \"\",\r\n      preferredLocation: \"\",\r\n      notAttend: \"\",\r\n      notQualified: \"\",\r\n      followUp: \"\",\r\n    });\r\n    // setSelectedValue(\"\");\r\n    setSelectStatus(\"\");\r\n    setDateRange({\r\n      start: null,\r\n      end: null,\r\n      dateFilterType: \"\",\r\n    });\r\n    setShowRedDot(false);\r\n    Dispatch(\r\n      FBmetaLeadsSliceActions.setFBmetaListFilter({\r\n        ...initialState,\r\n        createdTime: \"\",\r\n        endDate: \"\",\r\n        pages: 1,\r\n        size: size,\r\n        dateFilterType: \"\",\r\n      })\r\n    );\r\n  }\r\n  function handleClickCross(e) {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      FBmetaLeadsSliceActions.setFBmetaListFilter({\r\n        ...formData,\r\n        pages: 1,\r\n        size: size,\r\n        createdTime: create,\r\n        endDate: ended,\r\n        dateFilterType: dateRange.dateFilterType,\r\n      })\r\n    );\r\n    setShowFilter(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(dateRange, \"dataRange\");\r\n  }, [dateRange]);\r\n  const salary = [\r\n    {\r\n      value: \"fresher\",\r\n      label: \"Fresher\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   setSelectStatus({\r\n  //     ...selectStatus,\r\n  //     [name]: value === \"notAttend\" || \"notQualified\" ? true : false,\r\n  //   });\r\n  // };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSelectStatus(value);\r\n  };\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data.filter((el) => el.category == \"job category\"),\r\n        educationQualification: data\r\n          .filter((element) => element.category == \"qualification\")\r\n          .filter((_, index) => index !== 1),\r\n      }));\r\n    });\r\n  }, []);\r\n\r\n  const updateJobCategory = (event) => {\r\n    setFormData({ ...formData, jobCategory: event.options });\r\n  };\r\n  const updateQualification = (event) => {\r\n    setFormData({ ...formData, educationQualification: event.options });\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    // Implement your validation logic here\r\n    // For example, you can check if both start and end dates are filled\r\n    const isValid = dateRange.start && dateRange.end;\r\n\r\n    if (!dateRange.start) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!dateRange.end) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // Your submit logic here\r\n      // Proceed with form submission\r\n      console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false); // Close the modal or perform other actions\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button\r\n          className={`rounded-pill d-flex align-items-center ${FBStyle.Filterbutton}`}\r\n          variant=\"contained\"\r\n          onClick={() => setShowFilter(true)}\r\n        >\r\n          <BiFilterAlt />{\" \"}\r\n          <p\r\n            style={{\r\n              backgroundColor: FBmetaListFilterRedDot ? \"red\" : \"transparent\",\r\n              width: \"8px\",\r\n              height: \"8px\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          ></p>{\" \"}\r\n          Filter\r\n        </button>\r\n      </div>\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={1001}\r\n            childComponent={\r\n              <>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                  <h3>\r\n                    <span\r\n                      onClick={handleClickCross}\r\n                      className=\"btn btn-outline-danger\"\r\n                      style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                <div className={`${FBStyle.BoxContainerWidth}`}>\r\n                  <>\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        handleSubmit(e);\r\n                      }}\r\n                    >\r\n                      <Stack className=\"mt-1\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            <TextField\r\n                              id=\"outlined-basic-1\"\r\n                              label=\"Mobile number\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              value={formData.mobileNumber}\r\n                              // inputProps={{ maxLenth: 10 }}\r\n                              onChange={(event) =>\r\n                                // event.target.value.length <= 10 &&\r\n                                handleFieldChange(\r\n                                  \"mobileNumber\",\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              inputProps={{ maxLength: 10 }}\r\n                              InputProps={{\r\n                                // onKeyPress: (e) => {\r\n                                //   if (e.key === \"Enter\") {\r\n                                //     e.preventDefault();\r\n                                //     handleSubmit(e);\r\n                                //   }\r\n                                // },\r\n                                startAdornment: (\r\n                                  <span\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <AiOutlinePhone\r\n                                      style={{ marginRight: \"5px\" }}\r\n                                    />{\" \"}\r\n                                    +91\r\n                                  </span>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            <FormControl variant=\"outlined\" fullWidth>\r\n                              <TextField\r\n                                label=\"Created on\"\r\n                                id=\"basic-button\"\r\n                                value={`${dateRange.dateFilterType}`}\r\n                                // value={`${dateRange.start} - ${dateRange.end}`}\r\n                                aria-controls={open ? \"basic-menu\" : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? \"true\" : undefined}\r\n                                onClick={handleClick}\r\n                              ></TextField>\r\n                              <Menu\r\n                                id=\"basic-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                fullWidth\r\n                                MenuListProps={{\r\n                                  \"aria-labelledby\": \"basic-button\",\r\n                                }}\r\n                                style={{ width: \"100%\" }}\r\n                              >\r\n                                <MenuItem\r\n                                  onClick={() => {\r\n                                    handleDateSelect(\"today\");\r\n                                  }}\r\n                                  style={{ width: \"250px\" }}\r\n                                >\r\n                                  Today\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                  onClick={() => {\r\n                                    handleDateSelect(\"yesterday\");\r\n                                  }}\r\n                                >\r\n                                  Yesterday\r\n                                </MenuItem>\r\n\r\n                                <MenuItem\r\n                                  onClick={() => {\r\n                                    handleDateSelect(\"lastWeek\");\r\n                                  }}\r\n                                >\r\n                                  Last 1 Week\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                  onClick={() => {\r\n                                    handleDateSelect(\"lastTwoWeeks\");\r\n                                  }}\r\n                                >\r\n                                  Last 2 Week\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                  onClick={() => {\r\n                                    handleDateSelect(\"lastMonth\");\r\n                                  }}\r\n                                >\r\n                                  Last Month\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                  onClick={() => {\r\n                                    handleDateSelect(\"custom\");\r\n                                  }}\r\n                                >\r\n                                  Custom Date\r\n                                </MenuItem>\r\n                              </Menu>\r\n                            </FormControl>\r\n                            {/*  */}\r\n                            {showCustom && (\r\n                              <MyModal>\r\n                                <ModalContainer\r\n                                  zIndex={1005}\r\n                                  childComponent={\r\n                                    <div\r\n                                      style={{\r\n                                        minWidth: \"400px\",\r\n                                        width: \"auto\",\r\n                                      }}\r\n                                    >\r\n                                      <>\r\n                                        <div>\r\n                                          <form>\r\n                                            <p className=\"text-center \">\r\n                                              Select Custom Date{\" \"}\r\n                                            </p>\r\n                                            <div className=\"mt-2\">\r\n                                              <label htmlFor=\"start\">\r\n                                                From\r\n                                              </label>\r\n                                              <input\r\n                                                className={`form-control ${\r\n                                                  validationErrors.start\r\n                                                    ? \"is-invalid\"\r\n                                                    : \"\"\r\n                                                }`}\r\n                                                style={{ width: \"100%\" }}\r\n                                                type=\"date\"\r\n                                                id=\"start\"\r\n                                                onChange={(value) =>\r\n                                                  handleCustomDate(\r\n                                                    value,\r\n                                                    \"startDate\"\r\n                                                  )\r\n                                                }\r\n                                                value={dateRange.start}\r\n                                                name=\"trip-start\"\r\n                                                min=\"2020-01-01\"\r\n                                                max={\r\n                                                  new Date()\r\n                                                    .toISOString()\r\n                                                    .split(\"T\")[0]\r\n                                                }\r\n                                              />\r\n                                              {validationErrors.start && (\r\n                                                <div className=\"invalid-feedback\">\r\n                                                  Start date is required.\r\n                                                </div>\r\n                                              )}\r\n                                            </div>\r\n                                            <div className=\"mt-2\">\r\n                                              <label htmlFor=\"end\">To</label>\r\n                                              <input\r\n                                                className={`form-control ${\r\n                                                  validationErrors.end\r\n                                                    ? \"is-invalid\"\r\n                                                    : \"\"\r\n                                                }`}\r\n                                                value={dateRange.end}\r\n                                                style={{ width: \"100%\" }}\r\n                                                type=\"date\"\r\n                                                id=\"end\"\r\n                                                onChange={(value) =>\r\n                                                  handleCustomDate(\r\n                                                    value,\r\n                                                    \"endDate\"\r\n                                                  )\r\n                                                }\r\n                                                name=\"trip-end\"\r\n                                                min=\"2020-01-01\"\r\n                                                max={\r\n                                                  new Date()\r\n                                                    .toISOString()\r\n                                                    .split(\"T\")[0]\r\n                                                }\r\n                                              />\r\n                                              {validationErrors.end && (\r\n                                                <div className=\"invalid-feedback\">\r\n                                                  End date is required.\r\n                                                </div>\r\n                                              )}\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-end mt-3 \">\r\n                                              <button\r\n                                                onClick={() => {\r\n                                                  setValidationErrors({\r\n                                                    start: false,\r\n                                                    end: false,\r\n                                                  });\r\n                                                  setshowCustom(false);\r\n                                                }}\r\n                                                style={{\r\n                                                  backgroundColor: \"#b2261c\",\r\n                                                }}\r\n                                                className=\"btn rounded-pill text-white px-4  me-2\"\r\n                                              >\r\n                                                Close\r\n                                              </button>\r\n                                              <button\r\n                                                onClick={handleApplyCustomDate}\r\n                                                // color=\"primary\"\r\n                                                className=\"btn rounded-pill text-white px-4\"\r\n                                                style={{\r\n                                                  backgroundColor: \"#169C50\",\r\n                                                }}\r\n                                              >\r\n                                                Apply\r\n                                              </button>\r\n                                            </div>\r\n                                          </form>\r\n                                        </div>\r\n                                      </>\r\n                                    </div>\r\n                                  }\r\n                                />\r\n                              </MyModal>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            <Autocomplete\r\n                              id=\"tags-outlined\"\r\n                              options={options.jobCategory.map(\r\n                                (option) => option\r\n                              )}\r\n                              fullWidth\r\n                              getOptionLabel={(option) => `${option.options}`}\r\n                              // onChange={(event, value) => {\r\n                              //   updateJobCategory(value);\r\n                              //   console.log(value, \"value jobs\");\r\n                              // }}\r\n                              onChange={(event, value, reason) => {\r\n                                if (reason === \"clear\") {\r\n                                  console.log(\"Selection cleared\");\r\n                                  updateJobCategory(\"\");\r\n                                } else {\r\n                                  updateJobCategory(value);\r\n                                  console.log(value, \"value jobs\");\r\n                                }\r\n                              }}\r\n                              value={{\r\n                                options: formData.jobCategory\r\n                                  ? formData.jobCategory\r\n                                  : \"\",\r\n                                category: \"job category\",\r\n                              }}\r\n                              filterSelectedOptions\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Job category\"\r\n                                  placeholder=\"Job category\"\r\n                                />\r\n                              )}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            <TextField\r\n                              onChange={(event) =>\r\n                                handleFieldChange(\r\n                                  \"experience\",\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              value={formData.experience}\r\n                              name=\"experience\"\r\n                              id=\"experience\"\r\n                              className=\"form-control\"\r\n                              select\r\n                              label=\"Experience\"\r\n                            >\r\n                              {salary.map((option) => (\r\n                                <MenuItem\r\n                                  key={option.value}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          </div>\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            <Autocomplete\r\n                              id=\"tags-outlined\"\r\n                              options={options.educationQualification.map(\r\n                                (option) => option\r\n                              )}\r\n                              fullWidth\r\n                              getOptionLabel={(option) => `${option.options}`}\r\n                              // onChange={(event, value) => {\r\n                              //   updateQualification(value);\r\n                              //   console.log(value, \"value jobs\");\r\n                              // }}\r\n                              onChange={(event, value, reason) => {\r\n                                if (reason === \"clear\") {\r\n                                  console.log(\"Selection cleared\");\r\n                                  updateQualification(\"\");\r\n                                } else {\r\n                                  updateQualification(value);\r\n                                  console.log(value, \"value jobs\");\r\n                                }\r\n                              }}\r\n                              value={{\r\n                                options: formData.educationQualification\r\n                                  ? formData.educationQualification\r\n                                  : \"\",\r\n                                category: \"qualification\",\r\n                              }}\r\n                              filterSelectedOptions\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Qualification\"\r\n                                  placeholder=\"Qualification\"\r\n                                />\r\n                              )}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            <TextField\r\n                              id=\"outlined-basic-2\"\r\n                              label=\"Preferred City\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              value={formData.preferredLocation}\r\n                              InputProps={{\r\n                                onKeyPress: (e) => {\r\n                                  if (e.key === \"Enter\") {\r\n                                    handleSubmit(e);\r\n                                  }\r\n                                },\r\n                              }}\r\n                              onChange={(event) => {\r\n                                //   console.log(event.target.value);\r\n                                handleFieldChange(\r\n                                  \"preferredLocation\",\r\n                                  event.target.value\r\n                                );\r\n                              }}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            {/* <FormControl component=\"fieldset\">\r\n                              <RadioGroup row aria-label=\"status\" name=\"status\">\r\n                                <FormControlLabel\r\n                                  value={true}\r\n                                  control={<Radio />}\r\n                                  label=\"Not Attend\"\r\n                                  name=\"notAttend\"\r\n                                  checked={selectStatus.notAttend}\r\n                                  onChange={handleChange}\r\n                                />\r\n                                <FormControlLabel\r\n                                  value={true}\r\n                                  control={<Radio />}\r\n                                  label=\"Not Qualified\"\r\n                                  name=\"notQualified\"\r\n                                  checked={selectStatus.notQualified}\r\n                                  onChange={handleChange}\r\n                                />\r\n                              </RadioGroup>\r\n                            </FormControl> */}\r\n                            <FormControl fullWidth>\r\n                              <InputLabel id=\"demo-simple-select-label\">\r\n                                Status\r\n                              </InputLabel>\r\n                              <Select\r\n                                fullWidth\r\n                                value={selectStatus}\r\n                                onChange={handleChange}\r\n                                name=\"\"\r\n                                label=\"Status\"\r\n                                defaultValue={\"\"}\r\n                              >\r\n                                <MenuItem value={\"Not Attend\"}>\r\n                                  Not Attend\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Not Qualifed\"}>\r\n                                  Not Qualified\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Follow Up\"}>\r\n                                  Follow Up\r\n                                </MenuItem>\r\n                                <MenuItem value={\"No Status\"}>\r\n                                  No Status\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                          <div className=\"col-sm-4 mt-3\">\r\n                            {adminList && isSuperAdmin && (\r\n                              <TextField\r\n                                onChange={(e) => handleAssignToChange(e)}\r\n                                name=\"AssignedTo\"\r\n                                id=\"AssignedTo\"\r\n                                className=\"form-control\"\r\n                                select\r\n                                label=\"Assigned To\"\r\n                                value={formData.adminId}\r\n                                defaultValue={formData.adminId}\r\n                              >\r\n                                <MenuItem value={0}>ALL</MenuItem>\r\n                                {adminList.map((el) => (\r\n                                  <MenuItem key={el.id} value={el.id}>\r\n                                    {el.userName}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </TextField>\r\n                            )}\r\n                          </div>\r\n                          {/* <div className=\"col-sm-3\">\r\n                            <FormControl>\r\n                              <Select\r\n                                value={selectStatus.notQualified}\r\n                                onChange={handleChange}\r\n                                name=\"notQualified\"\r\n                              >\r\n                                <MenuItem value=\"true\">Not Qualified</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div> */}\r\n                        </div>\r\n                        <div className=\"d-flex flex-row gap-2 justify-content-end mt-4\">\r\n                          <button\r\n                            className={`rounded-pill ${FBStyle.Filterbutton}`}\r\n                            variant=\"outlined\"\r\n                            onClick={(e) => {\r\n                              handleClear(e);\r\n                            }}\r\n                          >\r\n                            Clear All\r\n                          </button>\r\n                          <button\r\n                            className={`rounded-pill ${FBStyle.search}`}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{ minWidth: \"150px\" }}\r\n                          >\r\n                            Search\r\n                            {/* {!formData.loading && !formData.completed && \"Search\"}\r\n\r\n                          {\r\n                            formData.loading && (\r\n                              <div className=\"spinner-border spinner-border-sm text-light\"></div>\r\n                            ) // Add spinner here\r\n                          }\r\n                          {formData.completed && \"Submitted\"} */}\r\n                          </button>\r\n                        </div>\r\n                      </Stack>\r\n                    </form>\r\n                  </>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FBinterviewFilter;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  PostCandidateFBmeta,\r\n  PutFBmetaIsQualified,\r\n  updateMetaSeenStatus,\r\n  PostFollowup,\r\n  GetFollowUpEvents,\r\n} from \"../../../apiServices\";\r\nimport { showHideDetailsActions } from \"../../../redux-store/store\";\r\nimport { DDMMYYYY_formate, MyModal, textTruncate } from \"../../../utility\";\r\nimport SuccessTick from \"../../../components/success_tick\";\r\nimport FBstyle from \"./candidateFacebookMeta.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport styles from \"../../../components/candidate-qualify-forms/CommonQualify.module.scss\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { LuRefreshCcw } from \"react-icons/lu\";\r\nimport TimelineFacebookMeta from \"./TimelineFacebookMeta\";\r\nimport FBinterviewFilter from \"./FBMetaLeadFilter\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  Pagination,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { FBmetaLeadsSliceActions } from \"../../../redux-store/store\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport Table from \"@mui/material/Table\";\r\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { DateTimePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport QualifyForm from \"./components/qualifyForm\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport dayjs from \"dayjs\";\r\nimport canLeadStyle from \"../CandidateLeadTable/candidateLead.module.scss\";\r\nimport CandidateFBLeadDetailsview from \"../../../components/ModalPopups/CandidateDetails/FBLeadDetailsview\";\r\nimport YourComponent from \"../../../components/candidate-qualify-forms/refrense\";\r\nimport Registered from \"../../../assets/images/registeredR.png\";\r\nimport LeadL from \"../../../assets/images/LeadL.png\";\r\nimport AddNotesFBLead from \"./PostCandidateNotes\";\r\nimport ExperienceQualify from \"../../../components/candidate-qualify-forms/ExperienceQualify\";\r\nimport ExperienceWithNoExperience from \"../../../components/candidate-qualify-forms/ExperienceWithNoExperience\";\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#d2d2d2\",\r\n    color: \"#545454f0\",\r\n    padding: \"8px\",\r\n    // Adjust the width as needed\r\n    // overflowX: \"auto\",\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    padding: \"8px\",\r\n    borderBottom: \"1px solid #545454f0\",\r\n    // width: \"300px\", // Adjust the width as needed\r\n    // overflowX: \"auto\",\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n}));\r\nfunction CandidateFaceBookMetaTable() {\r\n  const [CandidateFBList, setCandidateFBList] = useState([]);\r\n  const [pagesCount, setPagesCount] = useState({\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n  });\r\n  const [followupError, setFollowupError] = useState({\r\n    dateTime: false,\r\n    addNotes: false,\r\n    selectEvent: false,\r\n  });\r\n  const [currentMetaDetail, setCurrentMetaDetail] = useState();\r\n  console.log(currentMetaDetail);\r\n  const [showConfirmationPopup, setShowConfirmPopup] = useState(false);\r\n  const [eventData, setEventData] = useState([]);\r\n  const [notesOpen, setNotesOpen] = useState(false);\r\n  const [followupopen, setFollowupOpen] = useState(false);\r\n  const [formattedDate, setFormattedDate] = useState(null);\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [Follownotes, setFollownotes] = useState(\"\");\r\n  const [dateTimeError, setDateTimeError] = useState(\"\");\r\n  const [notesError, setNotesError] = useState(\"\");\r\n  const [totalCount, setTotalCount] = useState();\r\n  const [showLoader, setShowLoader] = useState(false); // New state for loader\r\n  const [openCreateReport, setOpenCreateReport] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [isFresher, setIsFresher] = useState(null);\r\n  const [showInitialRadios, setShowInitialRadios] = useState(true);\r\n  const [showCurrentlyWorkingComponent, setShowCurrentlyWorkingComponent] =\r\n    useState(false);\r\n  const [showNotWorkingComponent, setShowNotWorkingComponent] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [selectedValueError, setSelectedValueError] = useState(\"\");\r\n\r\n  const FBmetaListFilter = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter\r\n  );\r\n  const unseenCount = useSelector(\r\n    (state) => state.unseenCountDetails.candidate\r\n  );\r\n  const size = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter.size\r\n  );\r\n  const refreshRedDot = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter.refreshRedDot\r\n  );\r\n\r\n  const [showRedDot, setShowRedDot] = useState(refreshRedDot);\r\n  const [OpenConfirmation, setopenConfirmation] = useState(false);\r\n  const [assignAdminto, setAssignAdminto] = useState({\r\n    metaLeadId: \"\",\r\n    adminId: \"\",\r\n  });\r\n  const [putFBLead, setFBputLead] = useState({\r\n    id: \"\",\r\n    qualified: false,\r\n    notQualified: false,\r\n    notAttend: false,\r\n    followUp: false,\r\n    notes: \"\",\r\n  });\r\n  useEffect(() => {\r\n    // Your side effects or state updates go here\r\n  }, [putFBLead]);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  useEffect(() => {\r\n    console.log(FBmetaListFilter, \"interview filter\");\r\n  }, [FBmetaListFilter]);\r\n\r\n  const [leadDetails, setLeadDetails] = useState({\r\n    show: false,\r\n    date: {},\r\n  });\r\n\r\n  const ShowTimeline = useSelector(\r\n    (state) => state.showHideDetails.candidateLead.leadTimeLine\r\n  );\r\n\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n\r\n  useEffect(() => {\r\n    // to set super admin id as 0\r\n    let id = isSuperAdmin ? 0 : localStorage.getItem(\"adminID\");\r\n    Dispatch(FBmetaLeadsSliceActions.setFBmetaListFilterAdminId(id));\r\n  }, []);\r\n\r\n  function handleCloseNotes() {\r\n    setShowConfirmPopup(false);\r\n    // setIsNotesEmpty(false);\r\n  }\r\n\r\n  const handleRadioButtonChange = (event) => {\r\n    const { value } = event.target;\r\n    setIsFresher(value === \"Fresher\");\r\n    setShowInitialRadios(value !== \"Experienced\");\r\n    setShowCurrentlyWorkingComponent(false);\r\n    setShowNotWorkingComponent(false);\r\n  };\r\n\r\n  const handleCurrentlyWorkingChange = (event) => {\r\n    const { value } = event.target;\r\n    if (value === \"Currently Working\") {\r\n      setShowCurrentlyWorkingComponent(true);\r\n      setShowNotWorkingComponent(false);\r\n    } else if (value === \"Currently Not Working\") {\r\n      setShowNotWorkingComponent(true);\r\n      setShowCurrentlyWorkingComponent(false);\r\n    }\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setOpenCreateReport(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenCreateReport(false);\r\n  };\r\n  const hanndleClose = () => {\r\n    setIsFresher(false);\r\n    setShowCurrentlyWorkingComponent(false);\r\n    setShowNotWorkingComponent(false);\r\n    setOpenCreateReport(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsFresher(false);\r\n    // setShowCurrentlyWorkingComponent(false);\r\n    // setShowNotWorkingComponent(false);\r\n  };\r\n\r\n  const openFollowup = () => {\r\n    setFollowupOpen(true);\r\n  };\r\n\r\n  // const closeFollowup = () => {\r\n  //   setFollowupOpen(false);\r\n  //   PostCandidateFBmeta(FBmetaListFilter).then((data) => {\r\n  //     setCandidateFBList(data.metaLeadsList);\r\n  //     setPagesCount((prev) => ({\r\n  //       ...prev,\r\n  //       totalPages: Math.ceil(data.totalCount / size), // Assuming size is 10\r\n  //     }));\r\n  //   });\r\n  // };\r\n  const closeFollowup = () => {\r\n    setFollowupOpen(false);\r\n    setFollowupError((prev) => ({\r\n      ...prev,\r\n      dateTime: false,\r\n      addNotes: false,\r\n      selectEvent: false,\r\n    }));\r\n    setFormattedDate(\"\");\r\n    setFollownotes(\"\");\r\n    setSelectedValue(\"\");\r\n    PostCandidateFBmeta(FBmetaListFilter).then((data) => {\r\n      setCandidateFBList(data.metaLeadsList);\r\n      setPagesCount((prev) => ({\r\n        ...prev,\r\n        totalPages: Math.ceil(data.totalCount / size), // Assuming size is 10\r\n      }));\r\n    });\r\n  };\r\n\r\n  const handleFollowSubmit = async () => {\r\n    if (!formattedDate) {\r\n      setFollowupError((prev) => ({\r\n        ...prev,\r\n        dateTime: true,\r\n      }));\r\n      return;\r\n    } else if (Follownotes.trim() === \"\") {\r\n      setFollowupError((prev) => ({\r\n        ...prev,\r\n        addNotes: true,\r\n      }));\r\n      return;\r\n    } else {\r\n      try {\r\n        const formattedDateTime = dayjs(dateTime);\r\n        const formattedDate = formattedDateTime.format(\"YYYY-MM-DD\");\r\n        const followUpTime = formattedDateTime.format(\"hh:mm A\");\r\n\r\n        console.log(\"Formatted Date:\", formattedDate);\r\n        console.log(\"Follow-Up Time:\", followUpTime);\r\n\r\n        await PostFollowup(\r\n          currentMetaDetail.id,\r\n          null,\r\n          null,\r\n          formattedDate,\r\n          followUpTime,\r\n          Follownotes,\r\n          \"Facebook meta lead\"\r\n        );\r\n\r\n        setFormattedDate(\"\");\r\n        setSelectedValue(\"\");\r\n        setFollownotes(\"\");\r\n        setShowSuccess(true);\r\n        setTimeout(() => {\r\n          setShowSuccess(false);\r\n          setShowConfirmPopup(false);\r\n        }, 3000);\r\n        closeFollowup();\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the API call:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setShowLoader(true); // Set loader to true\r\n\r\n    // setCandidateFBList({\r\n    //   gender: null,\r\n    //   mobileNumber: -1,\r\n    //   assignTo: null,\r\n    //   status: null,\r\n    //   industry: null,\r\n    //   jobCategory: null,\r\n    //   qualification: null,\r\n    //   candidateType: null,\r\n    //   skills: null,\r\n    //   prefLocation: null,\r\n    //   eligibility: null,\r\n    //   passed_out_year: -1,\r\n    //   specification: null,\r\n    //   maxExperience: -1,\r\n    //   experience: -1,\r\n    //   endDate: null,\r\n    //   createdTime: null,\r\n    //   page: 1,\r\n    //   size: 10,\r\n    // });\r\n\r\n    // Fetch data after resetting\r\n    PostCandidateFBmeta(FBmetaListFilter)\r\n      .then((data) => {\r\n        setCandidateFBList(data.metaLeadsList);\r\n        setPagesCount((prev) => ({\r\n          ...prev,\r\n          totalPages: Math.ceil(data.totalCount / size), // Assuming size is 10\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        setShowLoader(false);\r\n      });\r\n  };\r\n  const handleReloadpage = () => {\r\n    setShowConfirmPopup(false);\r\n    setShowCurrentlyWorkingComponent(false);\r\n    setShowNotWorkingComponent(false);\r\n    setShowLoader(true);\r\n\r\n    PostCandidateFBmeta(FBmetaListFilter)\r\n      .then((data) => {\r\n        setCandidateFBList(data.metaLeadsList);\r\n        setPagesCount((prev) => ({\r\n          ...prev,\r\n          totalPages: Math.ceil(data.totalCount / size),\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        setShowLoader(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch follow-up events data when component mounts\r\n    async function fetchEventData() {\r\n      try {\r\n        const data = await GetFollowUpEvents();\r\n        setEventData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching follow-up events:\", error);\r\n      }\r\n    }\r\n\r\n    fetchEventData();\r\n  }, []);\r\n\r\n  function ReloadList() {\r\n    PostCandidateFBmeta(FBmetaListFilter).then((data) => {\r\n      console.log(data, \"metaLeadsList data\");\r\n      setCandidateFBList(data.metaLeadsList);\r\n      setShowLoader(false);\r\n      setPagesCount((prev) => ({\r\n        ...prev,\r\n        totalPages: Math.ceil(data.totalCount / size),\r\n      }));\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setShowLoader(true);\r\n    ReloadList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setShowLoader(true);\r\n\r\n    PostCandidateFBmeta(FBmetaListFilter)\r\n      .then((data) => {\r\n        setCandidateFBList(data.metaLeadsList);\r\n        setTotalCount(data.totalCount);\r\n        setPagesCount((prev) => ({\r\n          ...prev,\r\n          totalPages: Math.ceil(data.totalCount / size),\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        setShowLoader(false);\r\n      });\r\n  }, [FBmetaListFilter]);\r\n\r\n  const showLeadDetails = (data, show) => {\r\n    setLeadDetails((prev) => ({ ...prev, data: data, show: show }));\r\n  };\r\n  function capitalizeWords(str) {\r\n    return str ? str.replace(/\\b\\w/g, (char) => char.toUpperCase()) : \"\";\r\n  }\r\n  function formatExperience(experience) {\r\n    if (experience) {\r\n      if (experience.toLowerCase() === \"fresher\") {\r\n        return capitalizeWords(experience);\r\n      } else {\r\n        // Assuming experience is a number representing the years of experience\r\n        return ` ${experience} year${experience > 1 ? \"s\" : \"\"}(s)`;\r\n      }\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n  function copyToClipboard(text) {\r\n    const textField = document.createElement(\"textarea\");\r\n    textField.innerText = text;\r\n    document.body.appendChild(textField);\r\n    textField.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textField);\r\n    // const cell = document.activeElement;\r\n    // cell.title = \"Copied\";\r\n  }\r\n\r\n  // const handleCheckboxClick = () => {\r\n  //   // event.stopPropagation();\r\n  //   setIsChecked(!isChecked);\r\n  // };\r\n  const handleIsQualified = (status) => {\r\n    if (status === \"notQualified\") {\r\n      setFBputLead((prev) => ({\r\n        ...prev,\r\n        id: currentMetaDetail.id,\r\n        qualified: false,\r\n        notQualified: true,\r\n        notAttend: false,\r\n      }));\r\n    } else if (status === \"qualified\") {\r\n      setFBputLead((prev) => ({\r\n        ...prev,\r\n        id: currentMetaDetail.id,\r\n        qualified: true,\r\n        notQualified: false,\r\n        notAttend: false,\r\n      }));\r\n    } else if (status === \"followup\") {\r\n      setFBputLead((prev) => ({\r\n        ...prev,\r\n        id: currentMetaDetail.id,\r\n        qualified: false,\r\n        notQualified: false,\r\n        notAttend: false,\r\n        followup: true,\r\n      }));\r\n    } else {\r\n      setFBputLead((prev) => ({\r\n        ...prev,\r\n        id: currentMetaDetail.id,\r\n        qualified: false,\r\n        notQualified: false,\r\n        notAttend: true,\r\n      }));\r\n    }\r\n    //   setSelectshow(false);\r\n\r\n    // const selectedCandidate = CandidateFBList.find(\r\n    //   (candidate) => candidate.facebookMetaLead.id === id\r\n    // );\r\n    // if (selectedCandidate) {\r\n    //   setContactPersonName(selectedCandidate.facebookMetaLead.candidateName);\r\n    // }\r\n  };\r\n  function handleConfirmationClose() {\r\n    setShowConfirmPopup(false);\r\n  }\r\n  function handleConfirmationOpen() {\r\n    setShowConfirmPopup(true);\r\n  }\r\n  // function ConfirmFormSubmit(notes) {\r\n  //   setShowLoader(true);\r\n  //   if (putFBLead.id) {\r\n  //     PutFBmetaIsQualified(putFBLead, notes)\r\n  //       .then(() => {\r\n  //         setShowConfirmPopup(false);\r\n  //         // console.log(data, \"jksldhjsjkshsdtyu\");\r\n  //         PostCandidateFBmeta(FBmetaListFilter)\r\n  //           .then((data) => {\r\n  //             console.log(data, \"metaLeadsList data\");\r\n\r\n  //             setCandidateFBList(data.metaLeadsList);\r\n  //             setPagesCount((prev) => ({\r\n  //               ...prev,\r\n  //               totalPages: Math.ceil(data.totalCount / size),\r\n  //             }));\r\n  //           })\r\n  //           .catch((err) => {\r\n  //             alert(`Somthing went wrong, Error ${err}`);\r\n  //           })\r\n  //           .finally(() => {\r\n  //             setShowLoader(false);\r\n  //           });\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         alert(`Somthing went wrong, Error ${err}`);\r\n  //       });\r\n  //   }\r\n  // }\r\n  function ConfirmFormSubmit(notes) {\r\n    setShowLoader(true);\r\n    if (putFBLead.id) {\r\n      PutFBmetaIsQualified(putFBLead, notes)\r\n        .then(() => {\r\n          setShowConfirmPopup(false);\r\n          // console.log(data, \"jksldhjsjkshsdtyu\");\r\n          PostCandidateFBmeta(FBmetaListFilter)\r\n            .then((data) => {\r\n              console.log(data, \"metaLeadsList data\");\r\n\r\n              setCandidateFBList(data.metaLeadsList);\r\n              setPagesCount((prev) => ({\r\n                ...prev,\r\n                totalPages: Math.ceil(data.totalCount / size),\r\n              }));\r\n            })\r\n            .catch((err) => {\r\n              alert(`Somthing went wrong, Error ${err}`);\r\n            })\r\n            .finally(() => {\r\n              setShowLoader(false);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          alert(`Somthing went wrong, Error ${err}`);\r\n        });\r\n    }\r\n  }\r\n  function ConfirmQualifyFormSubmit(notes) {\r\n    setShowLoader(true);\r\n    if (putFBLead.id) {\r\n      PostCandidateFBmeta(FBmetaListFilter)\r\n        .then((data) => {\r\n          console.log(data, \"metaLeadsList data\");\r\n\r\n          setCandidateFBList(data.metaLeadsList);\r\n          setPagesCount((prev) => ({\r\n            ...prev,\r\n            totalPages: Math.ceil(data.totalCount / size),\r\n          }));\r\n        })\r\n        .catch((err) => {\r\n          alert(`Something went wrong, Error ${err}`);\r\n        })\r\n        .finally(() => {\r\n          setShowLoader(false);\r\n          setShowConfirmPopup(false);\r\n        });\r\n    }\r\n  }\r\n  const Dispatch = useDispatch();\r\n  function candidatePagination(event, page) {\r\n    const currentPage = page;\r\n\r\n    Dispatch(FBmetaLeadsSliceActions.setFBmetaListFilterPage(currentPage));\r\n  }\r\n  function candidateSize(size) {\r\n    Dispatch(FBmetaLeadsSliceActions.setFBmetaListFilterSize(size));\r\n  }\r\n  const inputRef = {\r\n    qualified: useRef(),\r\n    notQualified: useRef(),\r\n    notAttend: useRef(),\r\n    followup: useRef(),\r\n    // rescheduled: useRef(),\r\n  };\r\n  const handleButtonClick = (refName) => {\r\n    const ref = inputRef[refName];\r\n    if (ref.current) {\r\n      ref.current.click();\r\n    }\r\n  };\r\n\r\n  const showCity = (val) => {\r\n    if (val !== \"i_am_looking_for_job_in_other_city\") {\r\n      return capitalizeWords(val);\r\n    } else {\r\n      return \"Other\";\r\n    }\r\n  };\r\n\r\n  function updateNotes(data) {\r\n    setFBputLead((prev) => ({\r\n      ...prev,\r\n      notes: data,\r\n    }));\r\n  }\r\n  function handleTimeLinePopup(value, FbId) {\r\n    Dispatch(\r\n      showHideDetailsActions.setCandidateLeadDetails({\r\n        showTimeLine: value,\r\n        facebookId: FbId,\r\n      })\r\n    );\r\n  }\r\n\r\n  function updateSeenStatus(id) {\r\n    if (!isSuperAdmin) {\r\n      updateMetaSeenStatus(id).then(() => {\r\n        ReloadList();\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={`${FBstyle.FilterHead}`}>\r\n        {\" \"}\r\n        <div className=\"d-flex \">\r\n          Show {\"  \"}\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            className=\"px-1 py-1 mx-2\"\r\n            onChange={(event) => candidateSize(event.target.value)}\r\n          >\r\n            <option selected value=\"10\">\r\n              10\r\n            </option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </select>\r\n          {\"   \"}\r\n          Entries\r\n        </div>\r\n        <div className={`${canLeadStyle.filterAdduser}`}>\r\n          <div className=\"mt-1 me-2\">Total Count : {totalCount}</div>\r\n          <div\r\n            className=\"p-1 success me-2 mx-2 ms-auto \"\r\n            onClick={handleReset}\r\n            // style={{ : \"#169C50\", color: \"white\" }}\r\n          >\r\n            {/* <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"10px\",\r\n                height: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p> */}\r\n            <LuRefreshCcw style={{ cursor: \"pointer\" }} />\r\n          </div>\r\n          <FBinterviewFilter />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={`${FBstyle.Container}`}>\r\n          <div className={`table-responsive-sm ${FBstyle.responsive}`}>\r\n            <div style={{ minWidth: 300 }}>\r\n              <TableContainer className={`${FBstyle.TableContainer}`}>\r\n                <Table stickyHeader aria-label=\"sticky table\" className={``}>\r\n                  <TableHead className={`${FBstyle.Header}`}>\r\n                    <TableRow>\r\n                      <StyledTableCell>Name</StyledTableCell>\r\n                      <StyledTableCell>Mobile Number</StyledTableCell>\r\n                      <StyledTableCell>Whatsapp Number</StyledTableCell>\r\n                      <StyledTableCell>Job Category</StyledTableCell>\r\n                      <StyledTableCell>Experience</StyledTableCell>\r\n                      <StyledTableCell>Qualification</StyledTableCell>\r\n                      <StyledTableCell>Preferred City</StyledTableCell>\r\n                      {/* <StyledTableCell>Area</StyledTableCell>{\" \"} */}\r\n                      <StyledTableCell>Created on</StyledTableCell>\r\n                      <StyledTableCell>Status</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {CandidateFBList.length > 0 ? (\r\n                      <>\r\n                        {CandidateFBList.map((candidate, i) => {\r\n                          return (\r\n                            <>\r\n                              <TableRow\r\n                                key={i}\r\n                                sx={{\r\n                                  \"&:last-child td, &:last-child th\": {\r\n                                    border: 0,\r\n                                  },\r\n                                  border: 10,\r\n                                  borderBottomColor: \"black\",\r\n\r\n                                  backgroundColor:\r\n                                    !candidate.facebookMetaLead.seen &&\r\n                                    \"#1cb25f2f\",\r\n                                  // display:\r\n                                  //   FBmetaListFilter.notQualified ||\r\n                                  //   candidate.facebookMetaLead.notQualified ==\r\n                                  //     false\r\n                                  //     ? \"table-row\"\r\n                                  //     : \"none\",\r\n                                }}\r\n                                onClick={() => {\r\n                                  // alert(candidate.facebookMetaLead.id);\r\n\r\n                                  setCurrentMetaDetail(\r\n                                    candidate.facebookMetaLead\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <StyledTableCell\r\n                                  sx={{ color: \"#0b7af0\", cursor: \"pointer\" }}\r\n                                  title={\r\n                                    candidate.facebookMetaLead.candidateName\r\n                                      .length > 15\r\n                                      ? candidate.facebookMetaLead.candidateName\r\n                                      : null\r\n                                  }\r\n                                  onClick={() => {\r\n                                    copyToClipboard(\r\n                                      candidate.facebookMetaLead.candidateName\r\n                                    );\r\n                                    updateSeenStatus(\r\n                                      candidate.facebookMetaLead.id\r\n                                    );\r\n                                    showLeadDetails(\r\n                                      candidate.facebookMetaLead,\r\n                                      true\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <div className=\"row\">\r\n                                      {/* <div className=\"col-2\">\r\n                                        {candidate.facebookMetaLead\r\n                                          .isCandidate && (\r\n                                          <img src={Registered} alt=\"R\" />\r\n                                        )}\r\n                                        {candidate.facebookMetaLead\r\n                                          .isCanLead && (\r\n                                          <img src={LeadL} alt=\"L\" />\r\n                                        )}{\" \"}\r\n                                      </div> */}\r\n                                      <div className=\"col-10\">\r\n                                        {candidate.facebookMetaLead\r\n                                          .candidateName != null\r\n                                          ? textTruncate(\r\n                                              capitalizeWords(\r\n                                                candidate.facebookMetaLead\r\n                                                  .candidateName,\r\n                                                15\r\n                                              )\r\n                                            )\r\n                                          : \"-\"}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell\r\n                                  onClick={() => {\r\n                                    const mobileNumber =\r\n                                      candidate.facebookMetaLead.mobileNumber;\r\n                                    if (mobileNumber) {\r\n                                      const last10Digits =\r\n                                        mobileNumber.slice(-10); // Extract the last 10 digits\r\n                                      copyToClipboard(last10Digits);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {candidate.facebookMetaLead.mobileNumber !=\r\n                                  null\r\n                                    ? String(\r\n                                        candidate.facebookMetaLead.mobileNumber\r\n                                      ).slice(-10)\r\n                                    : \"-\"}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell\r\n                                  onClick={() => {\r\n                                    const whatsappNumber =\r\n                                      candidate.facebookMetaLead.whatsappNumber;\r\n                                    if (whatsappNumber) {\r\n                                      const last10Digits =\r\n                                        whatsappNumber.slice(-10); // Extract the last 10 digits\r\n                                      copyToClipboard(last10Digits);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {candidate.facebookMetaLead.whatsappNumber !=\r\n                                  null\r\n                                    ? String(\r\n                                        candidate.facebookMetaLead\r\n                                          .whatsappNumber\r\n                                      ).slice(-10)\r\n                                    : \"-\"}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell\r\n                                  title={\r\n                                    candidate.facebookMetaLead.jobCategory &&\r\n                                    candidate.facebookMetaLead.jobCategory\r\n                                      .length > 20\r\n                                      ? capitalizeWords(\r\n                                          candidate.facebookMetaLead.jobCategory\r\n                                        )\r\n                                      : null\r\n                                  }\r\n                                  onClick={() => {\r\n                                    copyToClipboard(\r\n                                      candidate.facebookMetaLead.jobCategory\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {candidate.facebookMetaLead.jobCategory !=\r\n                                  null\r\n                                    ? textTruncate(\r\n                                        capitalizeWords(\r\n                                          candidate.facebookMetaLead\r\n                                            .jobCategory,\r\n                                          15\r\n                                        )\r\n                                      )\r\n                                    : \"-\"}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                  {candidate.facebookMetaLead.experience != null\r\n                                    ? formatExperience(\r\n                                        candidate.facebookMetaLead.experience\r\n                                      )\r\n                                    : \"-\"}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell\r\n                                  title={\r\n                                    candidate.facebookMetaLead\r\n                                      .educationQualification &&\r\n                                    candidate.facebookMetaLead\r\n                                      .educationQualification.length > 20\r\n                                      ? candidate.facebookMetaLead\r\n                                          .educationQualification\r\n                                      : null\r\n                                  }\r\n                                  onClick={() => {\r\n                                    copyToClipboard(\r\n                                      candidate.facebookMetaLead\r\n                                        .educationQualification\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {candidate.facebookMetaLead\r\n                                    .educationQualification\r\n                                    ? textTruncate(\r\n                                        capitalizeWords(\r\n                                          candidate.facebookMetaLead\r\n                                            .educationQualification,\r\n                                          15\r\n                                        )\r\n                                      )\r\n                                    : \"-\"}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell\r\n\r\n                                // onClick={() => {\r\n                                //   copyToClipboard(\r\n                                //     candidate.facebookMetaLead.preferredLocation\r\n                                //   );\r\n                                // }}\r\n                                >\r\n                                  {candidate.facebookMetaLead\r\n                                    .preferredLocation != null\r\n                                    ? showCity(\r\n                                        candidate.facebookMetaLead\r\n                                          .preferredLocation\r\n                                      )\r\n                                    : \"-\"}\r\n                                </StyledTableCell>\r\n                                {/* <StyledTableCell>\r\n                                  {\" \"}\r\n                                  {candidate.facebookMetaLead.area}\r\n                                </StyledTableCell> */}\r\n\r\n                                <StyledTableCell>\r\n                                  <DDMMYYYY_formate\r\n                                    dateValue={\r\n                                      candidate.facebookMetaLead.createdTime\r\n                                    }\r\n                                  />\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                  <div className={`${FBstyle.Popper}`}>\r\n                                    <div className={`${FBstyle.StatusStyle}`}>\r\n                                      <div>\r\n                                        <>\r\n                                          {candidate.facebookMetaLead\r\n                                            .notAttend === true &&\r\n                                            candidate.facebookMetaLead\r\n                                              .notQualified === false &&\r\n                                            candidate.facebookMetaLead\r\n                                              .dailyTask === false && (\r\n                                              <>\r\n                                                <div\r\n                                                  className={`${FBstyle.Notattended_wrp}`}\r\n                                                >\r\n                                                  <input\r\n                                                    type=\"radio\"\r\n                                                    checked={\r\n                                                      candidate.facebookMetaLead\r\n                                                        .notAttend\r\n                                                    }\r\n                                                    name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                    id={`notAttend_${candidate.facebookMetaLead.id}`}\r\n                                                  />\r\n                                                  <label\r\n                                                    htmlFor={`notAttend_${candidate.facebookMetaLead.id}`}\r\n                                                  >\r\n                                                    Not Attend\r\n                                                  </label>\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                          {candidate.facebookMetaLead\r\n                                            .qualified === true && (\r\n                                            <div\r\n                                              className={`${FBstyle.Green_wrp}`}\r\n                                            >\r\n                                              <>\r\n                                                <input\r\n                                                  type=\"radio\"\r\n                                                  name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                  checked={\r\n                                                    candidate.facebookMetaLead\r\n                                                      .qualified\r\n                                                  }\r\n                                                  id={`qualified_${candidate.facebookMetaLead.id}`}\r\n                                                  facebookMetaLead\r\n                                                />\r\n\r\n                                                <label\r\n                                                  htmlFor={`qualified_${candidate.facebookMetaLead.id}`}\r\n                                                >\r\n                                                  Qualified\r\n                                                </label>\r\n                                              </>\r\n                                            </div>\r\n                                          )}\r\n                                          {candidate.facebookMetaLead\r\n                                            .notQualified === true && (\r\n                                            <div\r\n                                              className={`${FBstyle.chips_wrp}`}\r\n                                            >\r\n                                              {\" \"}\r\n                                              <input\r\n                                                type=\"radio\"\r\n                                                checked={\r\n                                                  candidate.facebookMetaLead\r\n                                                    .notQualified\r\n                                                }\r\n                                                name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                id={`notQualified_${candidate.facebookMetaLead.id}`}\r\n                                              />\r\n                                              <label\r\n                                                htmlFor={`notQualified_${candidate.facebookMetaLead.id}`}\r\n                                              >\r\n                                                Not Qualified\r\n                                              </label>\r\n                                            </div>\r\n                                          )}\r\n                                          {candidate.facebookMetaLead\r\n                                            .dailyTask === true &&\r\n                                            candidate.facebookMetaLead\r\n                                              .notQualified === false && (\r\n                                              <div\r\n                                                className={`${FBstyle.Followup_wrp}`}\r\n                                              >\r\n                                                {\" \"}\r\n                                                <input\r\n                                                  type=\"radio\"\r\n                                                  checked={\r\n                                                    candidate.facebookMetaLead\r\n                                                      .dailyTask\r\n                                                  }\r\n                                                  name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                  id={`dailyTask_${candidate.facebookMetaLead.id}`}\r\n                                                />\r\n                                                <label\r\n                                                  htmlFor={`dailyTask_${candidate.facebookMetaLead.id}`}\r\n                                                >\r\n                                                  Follow Up\r\n                                                </label>\r\n                                              </div>\r\n                                            )}\r\n                                          {/* {candidate.facebookMetaLead\r\n                                            .dailyTask === true && (\r\n                                            <div\r\n                                              className={`${FBstyle.Followup_wrp}`}\r\n                                            >\r\n                                              {\" \"}\r\n                                              <input\r\n                                                type=\"radio\"\r\n                                                checked={\r\n                                                  candidate.facebookMetaLead\r\n                                                    .dailyTask\r\n                                                }\r\n                                                name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                id={`followup_${candidate.facebookMetaLead.id}`}\r\n                                              />\r\n                                              <label\r\n                                                htmlFor={`followup_${candidate.facebookMetaLead.id}`}\r\n                                              >\r\n                                                Follow Up\r\n                                              </label>\r\n                                            </div>\r\n                                          )} */}\r\n                                          {/* {!FBmetaListFilter.notAttend ? (\r\n                                            //  candidate.facebookMetaLead\r\n                                            //     .notQualified === true && (\r\n                                            <div\r\n                                              className={`${FBstyle.chips_wrp}`}\r\n                                            >\r\n                                              {\" \"}\r\n                                              <input\r\n                                                type=\"radio\"\r\n                                                checked={\r\n                                                  candidate.facebookMetaLead\r\n                                                    .notQualified\r\n                                                }\r\n                                                name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                id={`notQualified_${candidate.facebookMetaLead.id}`}\r\n                                              />\r\n                                              <label\r\n                                                htmlFor={`notQualified_${candidate.facebookMetaLead.id}`}\r\n                                              >\r\n                                                Not Qualified\r\n                                              </label>\r\n                                            </div>\r\n                                          ) : (\r\n                                            // )\r\n                                            \"\"\r\n                                          )} */}\r\n                                        </>\r\n                                      </div>\r\n                                      {(candidate.facebookMetaLead\r\n                                        .isCandidate == null ||\r\n                                        candidate.facebookMetaLead\r\n                                          .isCandidate === false) &&\r\n                                      (candidate.facebookMetaLead.isCanLead ==\r\n                                        null ||\r\n                                        candidate.facebookMetaLead.isCanLead ===\r\n                                          false) ? (\r\n                                        <>\r\n                                          <div>\r\n                                            <div className=\"btn-group dropstart\">\r\n                                              <button\r\n                                                type=\"button\"\r\n                                                // className={`btn btn-light `}\r\n\r\n                                                data-bs-toggle=\"dropdown\"\r\n                                                data-bs-no-caret=\"true\"\r\n                                                aria-expanded=\"false\"\r\n                                                style={{\r\n                                                  border: \"none\",\r\n                                                  background: \"none\",\r\n                                                  color: \"#000\",\r\n                                                  cursor: \"pointer\",\r\n                                                  outline: \"none\",\r\n                                                  position: \"relative\",\r\n                                                  right: \"5px\",\r\n                                                  // backgroundColor: \"red\",\r\n                                                  fontSize: 20,\r\n                                                  zIndex: 1,\r\n                                                }}\r\n                                              >\r\n                                                <span className=\"\">\r\n                                                  {\" \"}\r\n                                                  <BsThreeDotsVertical />{\" \"}\r\n                                                </span>\r\n                                                {/* <AiOutlineEdit /> */}\r\n                                              </button>\r\n                                              <ul\r\n                                                className=\"dropdown-menu\"\r\n                                                style={{ textAlign: \"left\" }}\r\n                                                // ref={dropdownRef}\r\n                                              >\r\n                                                <li\r\n                                                  onClick={() => {\r\n                                                    handleConfirmationOpen(\r\n                                                      true\r\n                                                    );\r\n                                                    handleIsQualified(\r\n                                                      \"notAttend\"\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  <a className=\"dropdown-item\">\r\n                                                    <div\r\n                                                      className={`${FBstyle.select_wrp}`}\r\n                                                      onClick={() => {\r\n                                                        handleButtonClick(\r\n                                                          \"notAttend\"\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <input\r\n                                                        type=\"radio\"\r\n                                                        // ref={inputRef.qualified}\r\n                                                        name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                        checked={\r\n                                                          candidate\r\n                                                            .facebookMetaLead\r\n                                                            .notAttend\r\n                                                        }\r\n                                                        id={`notAttend_${candidate.facebookMetaLead.id}`}\r\n                                                        facebookMetaLead\r\n                                                      />\r\n\r\n                                                      <label\r\n                                                        htmlFor={`notAttend_${candidate.facebookMetaLead.id}`}\r\n                                                      >\r\n                                                        {\" \"}\r\n                                                        <GoDotFill\r\n                                                          style={{\r\n                                                            color: \"#fa9e0a\",\r\n                                                            fontSize: 20,\r\n                                                          }}\r\n                                                        />\r\n                                                        Not Attend\r\n                                                      </label>\r\n                                                    </div>\r\n                                                  </a>\r\n                                                </li>\r\n                                                <li\r\n                                                  onClick={() => {\r\n                                                    handleConfirmationOpen(\r\n                                                      true\r\n                                                    );\r\n                                                    handleIsQualified(\r\n                                                      \"qualified\"\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  <a\r\n                                                    className=\"dropdown-item\"\r\n                                                    href=\"#\"\r\n                                                  >\r\n                                                    <div\r\n                                                      className={`${FBstyle.select_wrp}`}\r\n                                                      onClick={() => {\r\n                                                        handleButtonClick(\r\n                                                          \"qualified\"\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <input\r\n                                                        type=\"radio\"\r\n                                                        // ref={inputRef.qualified}\r\n                                                        name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                        checked={\r\n                                                          candidate\r\n                                                            .facebookMetaLead\r\n                                                            .qualified\r\n                                                        }\r\n                                                        id={`qualified_${candidate.facebookMetaLead.id}`}\r\n                                                        facebookMetaLead\r\n                                                      />\r\n\r\n                                                      <label\r\n                                                        htmlFor={`qualified_${candidate.facebookMetaLead.id}`}\r\n                                                      >\r\n                                                        {\" \"}\r\n                                                        <GoDotFill\r\n                                                          style={{\r\n                                                            color: \"#169C50\",\r\n                                                            fontSize: 20,\r\n                                                          }}\r\n                                                        />\r\n                                                        Qualify\r\n                                                      </label>\r\n                                                    </div>\r\n                                                  </a>\r\n                                                </li>\r\n                                                <li\r\n                                                  onClick={() => {\r\n                                                    handleConfirmationOpen(\r\n                                                      true\r\n                                                    );\r\n                                                    handleIsQualified(\r\n                                                      \"notQualified\"\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  <a\r\n                                                    className=\"dropdown-item\"\r\n                                                    href=\"#\"\r\n                                                    onClick={() =>\r\n                                                      handleButtonClick(\r\n                                                        \"notQualified\"\r\n                                                      )\r\n                                                    }\r\n                                                  >\r\n                                                    <div\r\n                                                      className={`${FBstyle.select_wrp}`}\r\n                                                    >\r\n                                                      <input\r\n                                                        // ref={inputRef.notQualified}\r\n                                                        type=\"radio\"\r\n                                                        checked={\r\n                                                          candidate\r\n                                                            .facebookMetaLead\r\n                                                            .notQualified\r\n                                                        }\r\n                                                        name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                        id={`notQualified_${candidate.facebookMetaLead.id}`}\r\n                                                        // onChange={(event) => {\r\n                                                        //   handleConfirmationOpen(\r\n                                                        //     true\r\n                                                        //   );\r\n                                                        //   handleIsQualified(\r\n                                                        //     \"notQualified\"\r\n                                                        //   );\r\n                                                        // }}\r\n                                                        // onClick={handleCheckboxClick}\r\n                                                      />\r\n                                                      <label\r\n                                                        htmlFor={`notQualified_${candidate.facebookMetaLead.id}`}\r\n                                                      >\r\n                                                        <GoDotFill\r\n                                                          style={{\r\n                                                            color: \"#b2261c\",\r\n                                                            fontSize: 20,\r\n                                                          }}\r\n                                                        />{\" \"}\r\n                                                        Not Qualified\r\n                                                      </label>\r\n                                                    </div>\r\n                                                  </a>\r\n                                                </li>\r\n                                                <li\r\n                                                  onClick={() => {\r\n                                                    openFollowup(true);\r\n                                                    handleIsQualified(\r\n                                                      \"followup\"\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  <a\r\n                                                    className=\"dropdown-item\"\r\n                                                    href=\"#\"\r\n                                                    onClick={() =>\r\n                                                      handleButtonClick(\r\n                                                        \"followup\"\r\n                                                      )\r\n                                                    }\r\n                                                  >\r\n                                                    <div\r\n                                                      className={`${FBstyle.select_wrp}`}\r\n                                                    >\r\n                                                      <input\r\n                                                        // ref={inputRef.notQualified}\r\n                                                        type=\"radio\"\r\n                                                        checked={\r\n                                                          candidate\r\n                                                            .facebookMetaLead\r\n                                                            .dailyTask\r\n                                                        }\r\n                                                        name={`status_${candidate.facebookMetaLead.id}`}\r\n                                                        id={`followup_${candidate.facebookMetaLead.id}`}\r\n                                                        // onChange={(event) => {\r\n                                                        //   handleConfirmationOpen(\r\n                                                        //     true\r\n                                                        //   );\r\n                                                        //   handleIsQualified(\r\n                                                        //     \"notQualified\"\r\n                                                        //   );\r\n                                                        // }}\r\n                                                        // onClick={handleCheckboxClick}\r\n                                                      />\r\n                                                      <label\r\n                                                        htmlFor={`followup_${candidate.facebookMetaLead.id}`}\r\n                                                      >\r\n                                                        <GoDotFill\r\n                                                          style={{\r\n                                                            color: \"#430CBA\",\r\n                                                            fontSize: 20,\r\n                                                          }}\r\n                                                        />{\" \"}\r\n                                                        Follow Up\r\n                                                      </label>\r\n                                                    </div>\r\n                                                  </a>\r\n                                                </li>\r\n                                                <li>\r\n                                                  <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={() => {\r\n                                                      setNotesOpen(true);\r\n                                                    }}\r\n                                                  >\r\n                                                    <label\r\n                                                      htmlFor=\"\"\r\n                                                      // className={`${canLeadStyle.Register}`}\r\n                                                    >\r\n                                                      <GoDotFill\r\n                                                        style={{\r\n                                                          color: \"#16617b\",\r\n                                                          fontSize: 20,\r\n                                                        }}\r\n                                                      />{\" \"}\r\n                                                      Add Notes\r\n                                                    </label>\r\n                                                  </button>\r\n                                                </li>\r\n\r\n                                                {/* <li>\r\n                                                  <button\r\n                                                    className=\"dropdown-item\"\r\n                                                    onClick={openFollowup}\r\n                                                  >\r\n                                                    <label\r\n                                                      htmlFor={`followp${candidate.facebookMetaLead.id}`}\r\n                                                    >\r\n                                                      <GoDotFill\r\n                                                        style={{\r\n                                                          color: \"#430CBA\",\r\n                                                          fontSize: 20,\r\n                                                        }}\r\n                                                      />{\" \"}\r\n                                                      Follow Up\r\n                                                    </label>\r\n                                                  </button>\r\n                                                </li> */}\r\n                                                {/* <li>\r\n                                              <a\r\n                                                className=\"dropdown-item\"\r\n                                                href=\"#\"\r\n                                              >\r\n                                                <div\r\n                                                  className={`${FBstyle.select_wrp}`}\r\n                                                >\r\n                                                  <span\r\n                                                    onClick={() => {\r\n                                                      \r\n                                                      showLeadDetails(\r\n                                                        candidate.facebookMetaLead,\r\n                                                        true\r\n                                                      );\r\n                                                    }}\r\n                                                    className=\"py-1 d-inline-block\"\r\n                                                  >\r\n                                                    {\" \"}\r\n                                                    <MdReadMore /> More Details\r\n                                                  </span>\r\n                                                </div>\r\n                                              </a>\r\n                                            </li> */}\r\n                                              </ul>\r\n                                            </div>\r\n                                          </div>\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <div className=\"\">\r\n                                            {candidate.facebookMetaLead\r\n                                              .isCandidate && (\r\n                                              <img src={Registered} alt=\"R\" />\r\n                                            )}\r\n                                            {candidate.facebookMetaLead\r\n                                              .isCanLead && (\r\n                                              <img src={LeadL} alt=\"L\" />\r\n                                            )}{\" \"}\r\n                                          </div>\r\n                                        </>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </StyledTableCell>\r\n                              </TableRow>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    ) : (\r\n                      <p className=\"text-danger \">Not found</p>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center align-items-center mb-3 position-absolute bottom-0 start-50 translate-middle-x\">\r\n          <Stack spacing={2}>\r\n            <Pagination\r\n              count={pagesCount.totalPages}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              color=\"success\"\r\n              boundaryCount={1}\r\n              siblingCount={0}\r\n              onChange={candidatePagination}\r\n              size=\"medium\"\r\n            />\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n\r\n      {leadDetails.show && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <CandidateFBLeadDetailsview\r\n                  onClose={() => {\r\n                    setLeadDetails((prev) => ({ ...prev, show: false }));\r\n                  }}\r\n                  data={leadDetails.data}\r\n                  onAssignChange={() => {\r\n                    ReloadList();\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n      {showConfirmationPopup &&\r\n        (putFBLead.qualified ? (\r\n          <>\r\n            <MyModal>\r\n              <ModalContainer\r\n                // zIndex={5000}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      width: \"1000px\",\r\n                      // height: \"800px\",\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      // onClick={handleCloseModal}\r\n                      onClick={() => setShowConfirmPopup(false)}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"10px\",\r\n                        right: \"10px\",\r\n                        cursor: \"pointer\",\r\n                        border: \"1px solid red\",\r\n                        background: \"none\",\r\n                        fontSize: \"20px\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"10%\",\r\n                        color: \"red\",\r\n                        transition:\r\n                          \"color 0.3s, border-color 0.3s, background-color 0.3s\",\r\n                        \":hover\": {\r\n                          backgroundColor: \"red\",\r\n                          color: \"white\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </button>\r\n\r\n                    <div style={{ width: \"1000px\", height: \"90vh\" }}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                          <div>\r\n                            <strong>\r\n                              <div>Are you Fresher or Experienced?</div>\r\n                            </strong>\r\n                            <br />\r\n                          </div>\r\n                          <div className={`d-flex`}>\r\n                            <div\r\n                              className={`me-2 mb-3 d-flex  ${styles.radioInput}`}\r\n                            >\r\n                              {/* <label> */}\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Fresher\"\r\n                                id=\"FresherYes\"\r\n                                checked={isFresher === true}\r\n                                onChange={handleRadioButtonChange}\r\n                                style={{\r\n                                  marginRight: \"5px\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              />\r\n                              <label for=\"FresherYes\">Fresher</label>\r\n                            </div>\r\n                            {/* </label> */}\r\n                            {/* <label> */}\r\n                            <div\r\n                              className={`me-2 mb-3 d-flex  ${styles.radioInput}`}\r\n                            >\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Experienced\"\r\n                                id=\"ExperiencedNo\"\r\n                                checked={isFresher === false}\r\n                                onChange={handleRadioButtonChange}\r\n                                style={{\r\n                                  marginLeft: \"15px\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              />\r\n                              <label for=\"ExperiencedNo\">Experienced</label>\r\n                            </div>\r\n\r\n                            {/* </label> */}\r\n                            <br />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {!showInitialRadios && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            {\" \"}\r\n                            <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                  {\" \"}\r\n                                  <>\r\n                                    <div>\r\n                                      <strong>\r\n                                        <div>\r\n                                          Are you Currently Working or Not?\r\n                                        </div>\r\n                                      </strong>\r\n                                      <br />\r\n                                      {/* <label> */}\r\n                                      <div className={`d-flex`}>\r\n                                        <div\r\n                                          className={`me-2 mb-3 d-flex  ${styles.radioInput}`}\r\n                                        >\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            name=\"currentStatus\"\r\n                                            id=\"currentStatusYes\"\r\n                                            value=\"Currently Working\"\r\n                                            onChange={\r\n                                              handleCurrentlyWorkingChange\r\n                                            }\r\n                                            style={{\r\n                                              marginRight: \"5px\",\r\n                                              cursor: \"pointer\",\r\n                                            }}\r\n                                          />\r\n                                          <label for=\"currentStatusYes\">\r\n                                            Currently Working\r\n                                          </label>\r\n                                        </div>\r\n                                        <div\r\n                                          className={`me-2 mb-3 d-flex  ${styles.radioInput}`}\r\n                                        >\r\n                                          {/* </label> */}\r\n                                          {/* <label> */}\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            name=\"currentStatus\"\r\n                                            id=\"currentStatusNo\"\r\n                                            value=\"Currently Not Working\"\r\n                                            onChange={\r\n                                              handleCurrentlyWorkingChange\r\n                                            }\r\n                                            style={{\r\n                                              marginLeft: \"15px\",\r\n                                              cursor: \"pointer\",\r\n                                            }}\r\n                                          />\r\n                                          <label for=\"currentStatusNo\">\r\n                                            Currently Not Working\r\n                                          </label>\r\n                                          {/* </label> */}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            {showCurrentlyWorkingComponent && (\r\n                              <div\r\n                                style={{\r\n                                  maxHeight: \"65vh\",\r\n                                  overflowY: \"auto\",\r\n                                }}\r\n                              >\r\n                                <ExperienceQualify\r\n                                  onclosemodal={hanndleClose}\r\n                                  onclosepopup={handleClose}\r\n                                  onmobileNumber={\r\n                                    currentMetaDetail.mobileNumber\r\n                                  }\r\n                                  onwhatsappNumber={\r\n                                    currentMetaDetail.whatsappNumber\r\n                                  }\r\n                                  Onreloadepage={handleReloadpage}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                            {showNotWorkingComponent && (\r\n                              <div\r\n                                style={{\r\n                                  maxHeight: \"65vh\",\r\n                                  overflowY: \"auto\",\r\n                                }}\r\n                              >\r\n                                <ExperienceWithNoExperience\r\n                                  onclosemodal={hanndleClose}\r\n                                  onclosepopup={handleClose}\r\n                                  onmobileNumber={\r\n                                    currentMetaDetail.mobileNumber\r\n                                  }\r\n                                  onwhatsappNumber={\r\n                                    currentMetaDetail.whatsappNumber\r\n                                  }\r\n                                  Onreloadepage={handleReloadpage}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {isFresher && (\r\n                        <div\r\n                          style={{\r\n                            maxHeight: \"550px\",\r\n                            overflowY: \"auto\",\r\n                          }}\r\n                        >\r\n                          <YourComponent\r\n                            onclosemodal={hanndleClose}\r\n                            onclosepopup={handleClose}\r\n                            onmobileNumber={currentMetaDetail.mobileNumber}\r\n                            onwhatsappNumber={currentMetaDetail.whatsappNumber}\r\n                            Onreloadepage={handleReloadpage}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <MyModal>\r\n              <ModalContainer\r\n                // zIndex={2}\r\n                childComponent={\r\n                  <div>\r\n                    <div\r\n                      style={\r\n                        {\r\n                          // width: \"400px\",\r\n                        }\r\n                      }\r\n                    >\r\n                      {putFBLead.notQualified ? (\r\n                        <div>\r\n                          <div className=\"text-center mb-2\">\r\n                            Disqualify Candidate\r\n                          </div>\r\n                          <Box\r\n                            sx={{\r\n                              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n                            }}\r\n                            autoComplete=\"off\"\r\n                          >\r\n                            <form\r\n                              action=\"\"\r\n                              onSubmit={(e) => {\r\n                                e.preventDefault();\r\n\r\n                                ConfirmFormSubmit(putFBLead.notes);\r\n                              }}\r\n                            >\r\n                              <div>\r\n                                <TextField\r\n                                  id=\"outlined-multiline-flexible\"\r\n                                  label=\"Add Notes\"\r\n                                  multiline\r\n                                  // error={isNotesEmpty}\r\n                                  // helperText={\r\n                                  //   isNotesEmpty ? \"Notes cannot be empty\" : \"\"\r\n                                  // }\r\n                                  required\r\n                                  onChange={(event) => {\r\n                                    setFBputLead((prev) => ({\r\n                                      ...prev,\r\n                                      notes: event.target.value,\r\n                                    }));\r\n                                    // setIsNotesEmpty(false);\r\n                                  }}\r\n                                  maxRows={4}\r\n                                  fullWidth\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"d-flex justify-content-end gap-1 mt-1\">\r\n                                <button\r\n                                  className=\"btn text-white\"\r\n                                  onClick={handleCloseNotes}\r\n                                  style={{ backgroundColor: \"#d00a0a\" }}\r\n                                >\r\n                                  Cancel\r\n                                </button>\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  className=\"btn text-white\"\r\n                                  // onClick={ConfirmFormSubmit}\r\n                                  style={{ backgroundColor: \"#169C50\" }}\r\n                                >\r\n                                  Disqualify\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </Box>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <div className=\"text-center mb-2\">\r\n                            Not Attend Candidate\r\n                          </div>\r\n                          <Box\r\n                            sx={{\r\n                              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n                            }}\r\n                            autoComplete=\"off\"\r\n                          >\r\n                            <form\r\n                              action=\"\"\r\n                              onSubmit={(e) => {\r\n                                e.preventDefault();\r\n\r\n                                ConfirmFormSubmit(putFBLead.notes);\r\n                              }}\r\n                            >\r\n                              <div>\r\n                                <TextField\r\n                                  id=\"outlined-multiline-flexible\"\r\n                                  label=\"Add Notes\"\r\n                                  multiline\r\n                                  // error={isNotesEmpty}\r\n                                  // helperText={\r\n                                  //   isNotesEmpty ? \"Notes cannot be empty\" : \"\"\r\n                                  // }\r\n                                  // required\r\n                                  onChange={(event) => {\r\n                                    setFBputLead((prev) => ({\r\n                                      ...prev,\r\n                                      notes: event.target.value,\r\n                                    }));\r\n                                    // setIsNotesEmpty(false);\r\n                                  }}\r\n                                  maxRows={4}\r\n                                  fullWidth\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"d-flex justify-content-end gap-1 mt-1\">\r\n                                <button\r\n                                  className=\"btn text-white\"\r\n                                  onClick={handleCloseNotes}\r\n                                  style={{ backgroundColor: \"#d00a0a\" }}\r\n                                >\r\n                                  Cancel\r\n                                </button>\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  className=\"btn text-white\"\r\n                                  // onClick={() => setopenConfirmation(true)}\r\n                                  // onClick={ConfirmFormSubmit}\r\n                                  style={{ backgroundColor: \"#169C50\" }}\r\n                                >\r\n                                  Submit\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </Box>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          </>\r\n        ))}\r\n      {OpenConfirmation && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <p>Are you sure want to submit ? </p>\r\n                    <div className=\"d-felx justitfy-content-end gap-2\">\r\n                      <div\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => {\r\n                          setopenConfirmation(false);\r\n                        }}\r\n                      >\r\n                        No\r\n                      </div>\r\n                      <div\r\n                        className=\"btn btn-success\"\r\n                        onClick={ConfirmFormSubmit(putFBLead.notes)}\r\n                      >\r\n                        Yes\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {notesOpen && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div className=\"d-flex justify-content-end mb-2\">\r\n                    <div\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={() => setNotesOpen(false)}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <AddNotesFBLead facebookId={currentMetaDetail.id} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {ShowTimeline.show && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={1001}\r\n            childComponent={\r\n              <TimelineFacebookMeta facebookId={currentMetaDetail.id} />\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {followupopen && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={1001}\r\n            childComponent={\r\n              <div\r\n                style={{\r\n                  width: \"350px\",\r\n                  // height: \"800px\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <FormControl\r\n                  fullWidth\r\n                  error={followupError.dateTime}\r\n                  style={{ marginBottom: \"16px\" }}\r\n                >\r\n                  {\" \"}\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={[\"DateTimePicker\", \"TextField\"]}>\r\n                      <DateTimePicker\r\n                        label=\"select date and time\"\r\n                        error={Boolean(dateTimeError)}\r\n                        // helperText={dateTi/meError}\r\n                        // value={dateTime}\r\n                        onChange={(date) => {\r\n                          setDateTime(date);\r\n                          setFollowupError((prev) => ({\r\n                            ...prev,\r\n                            dateTime: false,\r\n                          }));\r\n                          const formattedDate =\r\n                            dayjs(date).format(\"YYYY-MM-DD hh:mm A\");\r\n                          setFormattedDate(formattedDate);\r\n                        }}\r\n                      />\r\n                      {/* {followupError.dateTime && (\r\n                        <FormHelperText error>\r\n                          Please select a date and time\r\n                        </FormHelperText>\r\n                      )} */}\r\n                      {followupError.dateTime && (\r\n                        <span style={{ color: \"#d44349\" }}>\r\n                          Please select a date and time\r\n                        </span>\r\n                      )}\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </FormControl>\r\n                <TextField\r\n                  style={{ marginBottom: \"16px\" }}\r\n                  id=\"outlined-multiline-flexible\"\r\n                  label=\"Add Notes\"\r\n                  multiline\r\n                  onChange={(event) => {\r\n                    setFollownotes(event.target.value);\r\n                    setFollowupError((prev) => ({\r\n                      ...prev,\r\n                      addNotes: false,\r\n                    }));\r\n                  }}\r\n                  maxRows={4}\r\n                  fullWidth\r\n                  error={followupError.addNotes}\r\n                  // helperText={\r\n                  //   followupError.addNotes ? \"Notes cannot be empty\" : \"\"\r\n                  // }\r\n                />\r\n                {followupError.addNotes && (\r\n                  <span style={{ color: \"#d44349\" }}>\r\n                    Notes cannot be empty\r\n                  </span>\r\n                )}\r\n                {/* <FormControl fullWidth style={{ marginBottom: \"16px\" }}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Follow up for\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Follow up for\"\r\n                    value={selectedValue}\r\n                    style={{ marginBottom: \"16px\", minWidth: \"120px\" }}\r\n                    error={followupError.selectEvent}\r\n                    onChange={(event) => {\r\n                      setSelectedValue(event.target.value);\r\n                      setFollowupError((prev) => ({\r\n                        ...prev,\r\n                        selectEvent: false,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    {eventData.map((event) => (\r\n                      <MenuItem key={event.id} value={event.eventName}>\r\n                        {event.eventName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  {followupError.selectEvent && (\r\n                    <span style={{ color: \"#d44349\" }}>\r\n                      Select event is empty\r\n                    </span>\r\n                  )}\r\n                </FormControl> */}\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      color: \"red\",\r\n                      borderColor: \"red\",\r\n                      marginRight: \"8px\",\r\n                    }}\r\n                    onClick={closeFollowup}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{ color: \"green\", borderColor: \"green\" }}\r\n                    onClick={handleFollowSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              </div>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n      <>\r\n        <Backdrop\r\n          sx={{\r\n            color: \"#fff\",\r\n            zIndex: (theme) => theme.zIndex.drawer + 1,\r\n          }}\r\n          open={showLoader}\r\n          onClick={() => {}} // Prevent closing on backdrop click\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </>\r\n      {showSuccess && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex=\"5000\"\r\n            childComponent={<SuccessTick HeadText=\"Successfully Updated\" />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n      {/* {showConfirmationqualifiedPopup && ( */}\r\n\r\n      {/* <div className=\"col-md-6 mb-3\">\r\n                <label className=\"form-label\">\r\n                  <strong>Immediate Joining</strong>\r\n                </label>\r\n                <div className={`d-flex`}>\r\n                  <div className={`me-2 mb-3 d-flex ${styles.radioInput}`}>\r\n                    <label className=\"form-check-label me-3\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"immediatejoining\"\r\n                      id=\"immediatejoiningRadioYes\"\r\n                      value=\"True\"\r\n                      className=\"form-check-input\"\r\n                      checked={formData.immediatejoining === \"True\"}\r\n                      onChange={() =>\r\n                        handleRadioChange(\"immediatejoining\", \"True\")\r\n                      }\r\n                    />\r\n                    <label for=\"immediatejoiningRadioYes\">Yes</label>\r\n                    </label>\r\n                  </div>\r\n                  <div className={`me-2 mb-3 d-flex ${styles.radioInput}`}>\r\n                    <label className=\"form-check-label\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"immediatejoining\"\r\n                      id=\"immediatejoiningRadioNo\"\r\n                      value=\"False\"\r\n                      className=\"form-check-input\"\r\n                      checked={formData.immediatejoining === \"False\"}\r\n                      onChange={() =>\r\n                        handleRadioChange(\"immediatejoining\", \"False\")\r\n                      }\r\n                    />\r\n                    <label for=\"immediatejoiningRadioNo\">No</label>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                {!formData.isimmediatejoiningSelected && (\r\n                  <div style={{ color: \"red\" }} className=\"error-message\">\r\n                    Please select a Immediate Joining.\r\n                  </div>\r\n                )}\r\n              </div> */}\r\n\r\n      {/* // )} */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CandidateFaceBookMetaTable;\r\n"],"names":["FBmetaListFilter","useSelector","state","FbmetaLeadDetails","FBmetaListFilterRedDot","refreshRedDot","size","create","createdTime","ended","endDate","filterDetails","isSuperAdmin","adminDetails","roleID","adminList","setAdminList","useState","initialState","adminId","localStorage","getItem","candidateName","mobileNumber","educationQualification","preferredLocation","jobCategory","experience","whatsappNumber","joiningAvailability","notAttend","notQualified","noStatus","followUp","formData","setFormData","options","setOptions","dateRange","setDateRange","start","end","dateFilterType","showFilter","setShowFilter","showCustom","setshowCustom","showRedDot","setShowRedDot","validationErrors","setValidationErrors","selectStatus","setSelectStatus","anchorEl","setAnchorEl","React","open","Boolean","handleDateSelect","useRef","val","selectedOption","today","Date","startDate","setDate","getDate","prev","toISOString","split","setMonth","getMonth","handleCustomDate","value","type","target","handleFieldChange","field","numbersOnlyTest","useEffect","GetAllsdminDetails","then","data","activeAdmins","filter","item","Deactived","catch","alert","Dispatch","useDispatch","handleSubmit","e","preventDefault","FBmetaLeadsSliceActions","setFBmetaListFilter","pages","isFilterApplied","setFBmetaListFilterRedDot","console","log","getJobFilterOptions","el","category","element","_","index","updateJobCategory","event","updateQualification","_jsxs","children","_jsx","className","concat","FBStyle","Filterbutton","variant","onClick","BiFilterAlt","style","backgroundColor","width","height","borderRadius","MyModal","ModalContainer","zIndex","childComponent","_Fragment","cursor","fontSize","AiOutlineClose","BoxContainerWidth","onSubmit","Stack","TextField","id","label","fullWidth","onChange","inputProps","maxLength","InputProps","startAdornment","display","alignItems","AiOutlinePhone","marginRight","FormControl","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","minWidth","htmlFor","name","min","max","isFormValid","isValid","Autocomplete","map","option","getOptionLabel","reason","filterSelectedOptions","renderInput","params","placeholder","select","onKeyPress","key","InputLabel","Select","defaultValue","handleAssignToChange","userName","handleClear","search","sx","StyledTableCell","styled","TableCell","tableCellClasses","head","color","padding","body","borderBottom","CandidateFBList","setCandidateFBList","pagesCount","setPagesCount","totalPages","totalCount","currentPage","followupError","setFollowupError","dateTime","addNotes","selectEvent","currentMetaDetail","setCurrentMetaDetail","showConfirmationPopup","setShowConfirmPopup","eventData","setEventData","notesOpen","setNotesOpen","followupopen","setFollowupOpen","formattedDate","setFormattedDate","setDateTime","Follownotes","setFollownotes","dateTimeError","setDateTimeError","notesError","setNotesError","setTotalCount","showLoader","setShowLoader","openCreateReport","setOpenCreateReport","showSuccess","setShowSuccess","isFresher","setIsFresher","showInitialRadios","setShowInitialRadios","showCurrentlyWorkingComponent","setShowCurrentlyWorkingComponent","showNotWorkingComponent","setShowNotWorkingComponent","selectedValue","setSelectedValue","selectedValueError","setSelectedValueError","unseenCountDetails","candidate","OpenConfirmation","setopenConfirmation","assignAdminto","setAssignAdminto","metaLeadId","putFBLead","setFBputLead","qualified","notes","isChecked","setIsChecked","leadDetails","setLeadDetails","show","date","ShowTimeline","showHideDetails","candidateLead","leadTimeLine","handleCloseNotes","setFBmetaListFilterAdminId","handleRadioButtonChange","handleCurrentlyWorkingChange","hanndleClose","handleClose","closeFollowup","PostCandidateFBmeta","metaLeadsList","Math","ceil","handleReloadpage","finally","ReloadList","capitalizeWords","str","replace","char","toUpperCase","copyToClipboard","text","textField","document","createElement","innerText","appendChild","execCommand","removeChild","async","GetFollowUpEvents","error","fetchEventData","handleIsQualified","status","followup","handleConfirmationOpen","ConfirmFormSubmit","PutFBmetaIsQualified","err","inputRef","handleButtonClick","refName","ref","current","click","FBstyle","FilterHead","setFBmetaListFilterSize","candidateSize","selected","canLeadStyle","filterAdduser","handleReset","LuRefreshCcw","FBinterviewFilter","Container","responsive","TableContainer","Table","stickyHeader","TableHead","Header","TableRow","TableBody","length","i","border","borderBottomColor","facebookMetaLead","seen","title","updateMetaSeenStatus","textTruncate","slice","String","toLowerCase","DDMMYYYY_formate","dateValue","Popper","StatusStyle","dailyTask","Notattended_wrp","checked","Green_wrp","chips_wrp","Followup_wrp","isCandidate","isCanLead","src","alt","background","outline","position","right","BsThreeDotsVertical","textAlign","select_wrp","GoDotFill","href","spacing","Pagination","count","shape","boundaryCount","siblingCount","page","setFBmetaListFilterPage","CandidateFBLeadDetailsview","onAssignChange","top","transition","styles","radioInput","for","marginLeft","maxHeight","overflowY","ExperienceQualify","onclosemodal","onclosepopup","onmobileNumber","onwhatsappNumber","Onreloadepage","ExperienceWithNoExperience","YourComponent","Box","m","autoComplete","action","multiline","required","maxRows","AddNotesFBLead","facebookId","TimelineFacebookMeta","marginBottom","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","dayjs","format","justifyContent","Button","borderColor","trim","formattedDateTime","followUpTime","PostFollowup","setTimeout","Backdrop","theme","drawer","CircularProgress","SuccessTick","HeadText"],"sourceRoot":""}