{"version":3,"file":"static/js/674.86962880.chunk.js","mappings":"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","sources":["webpack://admin-login-react/./src/pages/LoginPage/login.module.css?7ea1","pages/LoginPage/login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_content\":\"login_login_content__c7X9w\",\"login_btn_wrp\":\"login_login_btn_wrp__DGLHB\",\"login_btn\":\"login_login_btn__-Ne0Q\",\"form-group\":\"login_form-group__2X2Yb\",\"invalid\":\"login_invalid__XCRp0\"};","/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport styles from \"./login.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserLoginDetails } from \"../../apiServices\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminDetailsActions } from \"../../redux-store/store\";\r\n\r\nlet noError;\r\n\r\nconst LogIn = (props) => {\r\n  const navigate = useNavigate();\r\n  const [inputs, setInputs] = useState({\r\n    email_id: { value: \"\", err: false },\r\n    password: { value: \"\", err: false },\r\n  });\r\n  const [showError, setShowError] = useState({ showErr: false });\r\n  const [isloggedIn, setIsloggedIn] = useState({ LoggedIn: false });\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  const input_handler = (e) => {\r\n    console.log(inputs);\r\n    console.log(e.target.value);\r\n    const name = e.target.name;\r\n    const val = e.target.value;\r\n    const showErr = val === \"\";\r\n    setInputs((values) => ({\r\n      ...values,\r\n      [name]: { value: val, err: showErr },\r\n    }));\r\n  };\r\n\r\n  const Login_handler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputs.email_id.value == \"\" || inputs.password.value == \"\") {\r\n      noError++;\r\n    } else {\r\n      noError = 0;\r\n    }\r\n\r\n    const req_obj = {\r\n      method: \"POST\",\r\n    };\r\n\r\n    if (noError == 0) {\r\n      UserLoginDetails(inputs.email_id.value, inputs.password.value)\r\n        .then((data) => {\r\n          if (data.message == \"Login successful\") {\r\n            console.log(data, \"success\");\r\n\r\n            console.log(data.admin.id);\r\n\r\n            localStorage.setItem(\"adminID\", data.admin.id);\r\n\r\n            // to update admin details after logged in\r\n            Dispatch(\r\n              adminDetailsActions.setAdminLoginDetails({\r\n                adminID: data.admin.id,\r\n                privileges: data.roles[0].privileges,\r\n                roleID: data.roles[0].roleId,\r\n                emailID: data.roles[0].emailID,\r\n                isActive: data.roles[0].isActive,\r\n                userName: data.roles[0].userName,\r\n                module: data.roles[0].module,\r\n              })\r\n            );\r\n\r\n            navigate(\"/Dashboard\");\r\n\r\n            setShowError((val) => ({ ...val, showErr: false }));\r\n            // setIsloggedIn((val) => ({ ...val, LoggedIn: true }));\r\n            // CleverTapInit(data.data.userName, data.data.emailId);\r\n          } else {\r\n            setShowError((val) => ({ ...val, showErr: true }));\r\n            // setIsloggedIn((val) => ({ ...val, LoggedIn: false }));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err);\r\n          setShowError((val) => ({ ...val, showErr: true }));\r\n          setIsloggedIn((val) => ({ ...val, LoggedIn: false }));\r\n        });\r\n    } else {\r\n      if (inputs.email_id.value == \"\" && inputs.password.value == \"\") {\r\n        setInputs((values) => ({\r\n          ...values,\r\n          email_id: { value: \"\", err: true },\r\n          password: { value: \"\", err: true },\r\n        }));\r\n      } else {\r\n        if (inputs.password.value == \"\") {\r\n          setInputs((values) => ({\r\n            ...values,\r\n            email_id: { value: \"\", err: false },\r\n            password: { value: \"\", err: true },\r\n          }));\r\n        }\r\n\r\n        if (inputs.email_id.value == \"\") {\r\n          setInputs((values) => ({\r\n            ...values,\r\n            email_id: { value: \"\", err: true },\r\n            password: { value: \"\", err: false },\r\n          }));\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <h3 className=\"text-center mt-5 my-2 mb-4\">Log In</h3>\r\n        <div className={` ${styles.login_btn_wrp}`}>\r\n          <div\r\n            className={`shadow p-3 mb-5 bg-body rounded-2 ${styles.login_content}`}\r\n          >\r\n            <form action=\"#\" onSubmit={Login_handler}>\r\n              <div\r\n                className={` ${styles[\"form-group\"]} ${\r\n                  inputs.email_id.err && styles.invalid\r\n                }`}\r\n              >\r\n                <TextField\r\n                  type=\"email\"\r\n                  onChange={(e) => {\r\n                    input_handler(e);\r\n                  }}\r\n                  className=\"form-control mt-4\"\r\n                  name=\"email_id\"\r\n                  id=\"email_id\"\r\n                  value={inputs.email_id.value}\r\n                  label=\"Email ID\"\r\n                  variant=\"outlined\"\r\n                  // required\r\n                />\r\n                {inputs.email_id.err && (\r\n                  <p className=\"text-danger my-3\">Enter Email ID</p>\r\n                )}\r\n              </div>\r\n              <div\r\n                className={` ${styles[\"form-group\"]} ${\r\n                  inputs.password.err && styles.invalid\r\n                }`}\r\n              >\r\n                <TextField\r\n                  type=\"password\"\r\n                  className=\"form-control  mt-4 \"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={inputs.password.value}\r\n                  onChange={input_handler}\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  // required\r\n                />\r\n                {inputs.password.err && (\r\n                  <p className=\"text-danger my-3\">Enter password</p>\r\n                )}\r\n              </div>\r\n              <div className={`mt-5 ${styles.login_btn_wrp}`}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className={styles.login_btn}\r\n                  color=\"\"\r\n                  style={{ backgroundColor: \"#169C50\", color: \"#ffff\" }}\r\n                >\r\n                  Log In\r\n                </Button>\r\n              </div>\r\n            </form>\r\n            <div>\r\n              {showError.showErr && (\r\n                <p className=\"text-danger my-1\">Invalid Credentials</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"names":["noError","props","navigate","useNavigate","inputs","setInputs","useState","email_id","value","err","password","showError","setShowError","showErr","isloggedIn","setIsloggedIn","LoggedIn","Dispatch","useSelector","state","adminDetails","useDispatch","input_handler","e","console","log","target","name","val","values","_jsx","_Fragment","children","_jsxs","className","concat","styles","action","onSubmit","preventDefault","UserLoginDetails","then","data","message","admin","id","localStorage","setItem","adminDetailsActions","setAdminLoginDetails","adminID","privileges","roles","roleID","roleId","emailID","isActive","userName","module","catch","TextField","type","onChange","label","variant","Button","color","style","backgroundColor"],"sourceRoot":""}