{"version":3,"file":"static/js/791.90bae568.chunk.js","mappings":"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","sources":["pages/Employer/employerLead/EmployerLeadFilter.js","pages/Employer/employerLead/sendSLA.js","pages/Employer/employerLead/LeadTimeLine/timeLineDetails.js","pages/Employer/employerLead/LeadTimeLine/TimelineView.js","pages/Employer/employerLead/LeadTimeLine/addTimelines.js","components/ModalPopups/EmployerPopup/EmployerLeadDetailsView.js","pages/Employer/employerLead/EmployerLeadTable.js","webpack://admin-login-react/./src/pages/Candidate/CandidateRegistered/RegisteredCandidate.module.scss?bc2f"],"sourcesContent":["/* eslint-disable default-case */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { MyModal, numbersOnlyTest } from \"../../../utility\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport FBStyle from \"../../Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  Autocomplete,\r\n  FormControl,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { EmployerLeadActions } from \"../../../redux-store/store\";\r\nimport { getJobFilterOptions } from \"../../../apiServices\";\r\nfunction EmployerLeadFilter() {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const EmployerLead = useSelector(\r\n    (state) => state.EmployerLeadDetails.EmployerLeadFilter\r\n  );\r\n  const EmployerLeadRedDot = useSelector(\r\n    (state) => state.EmployerLeadDetails.refreshRedDot\r\n  );\r\n  const size = useSelector(\r\n    (state) => state.EmployerLeadDetails.EmployerLeadFilter.size\r\n  );\r\n  const create = useSelector(\r\n    (state) => state.EmployerLeadDetails.EmployerLeadFilter.createdTimeStart\r\n  );\r\n  const ended = useSelector(\r\n    (state) => state.EmployerLeadDetails.EmployerLeadFilter.createdTimeEnd\r\n  );\r\n  const initialState = {\r\n    mobile_number: EmployerLead.mobile_number,\r\n    email_id: EmployerLead.email_id,\r\n    city: EmployerLead.city,\r\n    industry: EmployerLead.industry,\r\n    company_name: EmployerLead.company_name,\r\n  };\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [options, setOptions] = useState({\r\n    city: [],\r\n    area: [],\r\n    industry: [],\r\n  });\r\n  const [dateRange, setDateRange] = useState({\r\n    start: EmployerLead.createdTimeStart,\r\n    end: EmployerLead.createdTimeEnd,\r\n    dateFilterType: EmployerLead.dateFilterType,\r\n  });\r\n  const [showCustom, setshowCustom] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        start: today.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        start: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        end: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n  const isFormValid = () => {\r\n    // Implement your validation logic here\r\n    // For example, you can check if both start and end dates are filled\r\n    const isValid = dateRange.start && dateRange.end;\r\n\r\n    if (!dateRange.start) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!dateRange.end) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // Your submit logic here\r\n      // Proceed with form submission\r\n      console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false); // Close the modal or perform other actions\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      const IndustryOptions = data.filter((el) => el.category == \"industry\");\r\n      const cityOptions = data.filter((element) => element.category === \"city\");\r\n      const areaOptions = data.filter(\r\n        (element) => element.category === \"areas\"\r\n      );\r\n      const JobCategoryOptions = data.filter(\r\n        (element) => element.category == \"job category\"\r\n      );\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        city: cityOptions,\r\n        area: areaOptions,\r\n        industry: IndustryOptions,\r\n        //   jobCategory: JobCategoryOptions,\r\n      }));\r\n      console.log(cityOptions);\r\n    });\r\n  }, []);\r\n  const updateArea = (event, value) => {\r\n    // to update cities\r\n    console.log(event, \"jhjhjkhjh\");\r\n    setFormData({ ...formData, area: event });\r\n  };\r\n  const updateCity = (event, value) => {\r\n    // to update cities\r\n    console.log(event, \"jhjhjkhjh\");\r\n    setFormData({ ...formData, city: event.options });\r\n  };\r\n  const updateIndustry = (event, value) => {\r\n    // to update cities\r\n    console.log(event, \"jhjhjkhjh\");\r\n    setFormData({ ...formData, industry: event.options });\r\n  };\r\n  const Dispatch = useDispatch();\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  function emailRegexTest(email) {\r\n    return emailRegex.test(email);\r\n  }\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobile_number\":\r\n        if (numbersOnlyTest(value)) {\r\n          setFormData({ ...formData, [field]: value });\r\n        }\r\n        break;\r\n      case \"company_name\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"email_id\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      EmployerLeadActions.setEmployerLeadFilter({\r\n        ...formData,\r\n        createdTimeStart: dateRange.start || create,\r\n        createdTimeEnd: dateRange.end || ended,\r\n        page: 0,\r\n        size: size,\r\n        dateFilterType: dateRange.dateFilterType || \"\",\r\n      })\r\n    );\r\n    const isFilterApplied =\r\n      formData.city ||\r\n      formData.company_name ||\r\n      formData.mobile_number ||\r\n      formData.industry ||\r\n      dateRange.start ||\r\n      dateRange.end;\r\n\r\n    Dispatch(EmployerLeadActions.setEmployerLeadRedDot(isFilterApplied));\r\n    // if (isFilterApplied) {\r\n    //   setShowRedDot(true);\r\n    // } else {\r\n    //   setShowRedDot(false);\r\n    // }\r\n    setShowFilter(false);\r\n  };\r\n  function handleClear(e) {\r\n    e.preventDefault();\r\n    setFormData({\r\n      mobile_number: \"\",\r\n      email_id: \"\",\r\n      city: \"\",\r\n      industry: \"\",\r\n      company_name: \"\",\r\n      createdTimeStart: \"\",\r\n      createdTimeEnd: \"\",\r\n    });\r\n    // setSelectedValue(\"\");\r\n    setDateRange({\r\n      start: null,\r\n      end: null,\r\n      dateFilterType: \"\",\r\n    });\r\n    setShowRedDot(false);\r\n\r\n    Dispatch(\r\n      EmployerLeadActions.setEmployerLeadFilter({\r\n        ...initialState,\r\n        createdTimeStart: \"\",\r\n        createdTimeEnd: \"\",\r\n        page: 0,\r\n        size: size,\r\n        dateFilterType: \"\",\r\n      })\r\n    );\r\n  }\r\n  function handleClickCross(e) {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      EmployerLeadActions.setEmployerLeadFilter({\r\n        ...formData,\r\n        page: 0,\r\n        size: size,\r\n        createdTimeStart: create,\r\n        createdTimeEnd: ended,\r\n        dateFilterType: dateRange.dateFilterType,\r\n      })\r\n    );\r\n    setShowFilter(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <button\r\n            className={`rounded-pill d-flex align-items-center ${FBStyle.Filterbutton}`}\r\n            variant=\"contained\"\r\n            onClick={() => setShowFilter(true)}\r\n          >\r\n            <BiFilterAlt />{\" \"}\r\n            <p\r\n              style={{\r\n                backgroundColor: EmployerLeadRedDot ? \"red\" : \"transparent\",\r\n                width: \"8px\",\r\n                height: \"8px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n            Filter\r\n          </button>\r\n        </div>\r\n        {showFilter && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex={1001}\r\n              childComponent={\r\n                <>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                    <h3>\r\n                      <span\r\n                        onClick={handleClickCross}\r\n                        // onClick={() => setShowFilter(false)}\r\n                        className=\"btn btn-outline-danger\"\r\n                        style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                      >\r\n                        <AiOutlineClose />\r\n                      </span>\r\n                    </h3>\r\n                  </div>\r\n                  <div className={`${FBStyle.BoxContainerWidth}`}>\r\n                    <>\r\n                      <form\r\n                        onSubmit={(e) => {\r\n                          handleSubmit(e);\r\n                        }}\r\n                      >\r\n                        <Stack className=\"mt-1\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-4\">\r\n                              <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Mobile number\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                value={formData.mobile_number}\r\n                                // inputProps={{ maxLenth: 10 }}\r\n                                onChange={(event) =>\r\n                                  handleFieldChange(\r\n                                    \"mobile_number\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                inputProps={{ maxLength: 10 }}\r\n                                InputProps={{\r\n                                  startAdornment: (\r\n                                    <span\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      <AiOutlinePhone\r\n                                        style={{ marginRight: \"5px\" }}\r\n                                      />{\" \"}\r\n                                      +91\r\n                                    </span>\r\n                                  ),\r\n                                }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                              <FormControl variant=\"outlined\" fullWidth>\r\n                                <TextField\r\n                                  label=\"Created on\"\r\n                                  id=\"basic-button\"\r\n                                  value={`${dateRange.dateFilterType}`}\r\n                                  // value={`${dateRange.start} - ${dateRange.end}`}\r\n                                  aria-controls={\r\n                                    open ? \"basic-menu\" : undefined\r\n                                  }\r\n                                  aria-haspopup=\"true\"\r\n                                  aria-expanded={open ? \"true\" : undefined}\r\n                                  onClick={handleClick}\r\n                                ></TextField>\r\n                                <Menu\r\n                                  id=\"basic-menu\"\r\n                                  anchorEl={anchorEl}\r\n                                  open={open}\r\n                                  onClose={handleClose}\r\n                                  fullWidth\r\n                                  MenuListProps={{\r\n                                    \"aria-labelledby\": \"basic-button\",\r\n                                  }}\r\n                                  style={{ width: \"100%\" }}\r\n                                >\r\n                                  <MenuItem\r\n                                    onClick={() => {\r\n                                      handleDateSelect(\"today\");\r\n                                    }}\r\n                                    style={{ width: \"250px\" }}\r\n                                  >\r\n                                    Today\r\n                                  </MenuItem>\r\n                                  <MenuItem\r\n                                    onClick={() => {\r\n                                      handleDateSelect(\"lastWeek\");\r\n                                    }}\r\n                                  >\r\n                                    Last 1 Week\r\n                                  </MenuItem>\r\n                                  <MenuItem\r\n                                    onClick={() => {\r\n                                      handleDateSelect(\"lastTwoWeeks\");\r\n                                    }}\r\n                                  >\r\n                                    Last 2 Week\r\n                                  </MenuItem>\r\n                                  <MenuItem\r\n                                    onClick={() => {\r\n                                      handleDateSelect(\"lastMonth\");\r\n                                    }}\r\n                                  >\r\n                                    Last Month\r\n                                  </MenuItem>\r\n                                  <MenuItem\r\n                                    onClick={() => {\r\n                                      handleDateSelect(\"custom\");\r\n                                    }}\r\n                                  >\r\n                                    Custom Date\r\n                                  </MenuItem>\r\n                                </Menu>\r\n                              </FormControl>\r\n\r\n                              {showCustom && (\r\n                                <MyModal>\r\n                                  <ModalContainer\r\n                                    zIndex={1005}\r\n                                    childComponent={\r\n                                      <div\r\n                                        style={{\r\n                                          minWidth: \"400px\",\r\n                                          width: \"auto\",\r\n                                        }}\r\n                                      >\r\n                                        <>\r\n                                          <div>\r\n                                            <form>\r\n                                              <p className=\"text-center \">\r\n                                                Select Custom Date{\" \"}\r\n                                              </p>\r\n                                              <div className=\"mt-2\">\r\n                                                <label htmlFor=\"start\">\r\n                                                  From\r\n                                                </label>\r\n                                                <input\r\n                                                  className={`form-control ${\r\n                                                    validationErrors.start\r\n                                                      ? \"is-invalid\"\r\n                                                      : \"\"\r\n                                                  }`}\r\n                                                  style={{ width: \"100%\" }}\r\n                                                  type=\"date\"\r\n                                                  id=\"start\"\r\n                                                  onChange={(value) =>\r\n                                                    handleCustomDate(\r\n                                                      value,\r\n                                                      \"startDate\"\r\n                                                    )\r\n                                                  }\r\n                                                  value={dateRange.start}\r\n                                                  name=\"trip-start\"\r\n                                                  min=\"2020-01-01\"\r\n                                                  max={\r\n                                                    new Date()\r\n                                                      .toISOString()\r\n                                                      .split(\"T\")[0]\r\n                                                  }\r\n                                                />\r\n                                                {validationErrors.start && (\r\n                                                  <div className=\"invalid-feedback\">\r\n                                                    Start date is required.\r\n                                                  </div>\r\n                                                )}\r\n                                              </div>\r\n                                              <div className=\"mt-2\">\r\n                                                <label htmlFor=\"end\">To</label>\r\n                                                <input\r\n                                                  className={`form-control ${\r\n                                                    validationErrors.end\r\n                                                      ? \"is-invalid\"\r\n                                                      : \"\"\r\n                                                  }`}\r\n                                                  value={dateRange.end}\r\n                                                  style={{ width: \"100%\" }}\r\n                                                  type=\"date\"\r\n                                                  id=\"end\"\r\n                                                  onChange={(value) =>\r\n                                                    handleCustomDate(\r\n                                                      value,\r\n                                                      \"endDate\"\r\n                                                    )\r\n                                                  }\r\n                                                  name=\"trip-end\"\r\n                                                  min=\"2020-01-01\"\r\n                                                  max={\r\n                                                    new Date()\r\n                                                      .toISOString()\r\n                                                      .split(\"T\")[0]\r\n                                                  }\r\n                                                />\r\n                                                {validationErrors.end && (\r\n                                                  <div className=\"invalid-feedback\">\r\n                                                    End date is required.\r\n                                                  </div>\r\n                                                )}\r\n                                              </div>\r\n                                              <div className=\"d-flex justify-content-end mt-3 \">\r\n                                                <button\r\n                                                  onClick={() => {\r\n                                                    setValidationErrors({\r\n                                                      start: false,\r\n                                                      end: false,\r\n                                                    });\r\n                                                    setshowCustom(false);\r\n                                                  }}\r\n                                                  style={{\r\n                                                    backgroundColor: \"#b2261c\",\r\n                                                  }}\r\n                                                  className=\"btn rounded-pill text-white px-4  me-2\"\r\n                                                >\r\n                                                  Close\r\n                                                </button>\r\n                                                <button\r\n                                                  onClick={\r\n                                                    handleApplyCustomDate\r\n                                                  }\r\n                                                  // color=\"primary\"\r\n                                                  className=\"btn rounded-pill text-white px-4\"\r\n                                                  style={{\r\n                                                    backgroundColor: \"#169C50\",\r\n                                                  }}\r\n                                                >\r\n                                                  Apply\r\n                                                </button>\r\n                                              </div>\r\n                                            </form>\r\n                                          </div>\r\n                                        </>\r\n                                      </div>\r\n                                    }\r\n                                  />\r\n                                </MyModal>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                              <TextField\r\n                                // className=\"mt-2\"\r\n                                fullWidth\r\n                                label=\"Company Name\"\r\n                                name=\"companyName\"\r\n                                placeholder=\"Company Name\"\r\n                                value={formData.company_name}\r\n                                onChange={(event) =>\r\n                                  handleFieldChange(\r\n                                    \"company_name\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-4 mt-3\">\r\n                              <Autocomplete\r\n                                name=\"industries\"\r\n                                id=\"tags-outlined\"\r\n                                onChange={(event, value, reason) => {\r\n                                  if (reason === \"clear\") {\r\n                                    console.log(\"Selection cleared\");\r\n                                    updateIndustry(\"\");\r\n                                  } else {\r\n                                    updateIndustry(value);\r\n                                    console.log(value, \"value jobs\");\r\n                                  }\r\n                                }}\r\n                                options={options.industry.map(\r\n                                  (option) => option\r\n                                )}\r\n                                getOptionLabel={(option) => `${option.options}`}\r\n                                filterSelectedOptions\r\n                                value={{\r\n                                  options: formData.industry\r\n                                    ? formData.industry\r\n                                    : \"\",\r\n                                  category: \"industry\",\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Industries\"\r\n                                    placeholder=\"Favorites\"\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-sm-4 mt-3\">\r\n                              <Autocomplete\r\n                                id=\"tags-outlined\"\r\n                                options={options.city.map((option) => option)}\r\n                                getOptionLabel={(option) => `${option.options}`}\r\n                                onChange={(event, value, reason) => {\r\n                                  if (reason === \"clear\") {\r\n                                    console.log(\"Selection cleared\");\r\n                                    updateCity(\"\");\r\n                                  } else {\r\n                                    updateCity(value);\r\n                                    console.log(value, \"value jobs\");\r\n                                  }\r\n                                }}\r\n                                value={{\r\n                                  options: formData.city ? formData.city : \"\",\r\n                                  category: \"city\",\r\n                                }}\r\n                                fullWidth\r\n                                filterSelectedOptions\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"City\"\r\n                                    placeholder=\"City\"\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-sm-4 mt-3\">\r\n                              <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email ID\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                value={formData.email_id}\r\n                                onChange={(event) =>\r\n                                  handleFieldChange(\r\n                                    \"email_id\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-flex flex-row gap-2 justify-content-end mt-4\">\r\n                            <button\r\n                              className={`rounded-pill ${FBStyle.Filterbutton}`}\r\n                              variant=\"outlined\"\r\n                              onClick={(e) => {\r\n                                handleClear(e);\r\n                              }}\r\n                            >\r\n                              Clear All\r\n                            </button>\r\n                            <button\r\n                              className={`rounded-pill ${FBStyle.search}`}\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              sx={{ minWidth: \"150px\" }}\r\n                            >\r\n                              Search\r\n                            </button>\r\n                          </div>\r\n                        </Stack>\r\n                      </form>\r\n                    </>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployerLeadFilter;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { PostSlaMail } from \"../../../apiServices\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { MyModal } from \"../../../utility\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function EmployerSendSLA({\r\n  onSuccess,\r\n  Id,\r\n  type,\r\n  onClose,\r\n  toEmail,\r\n}) {\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  // console.log(adminDetails);\r\n\r\n  const adminId = localStorage.getItem(\"adminID\");\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    type: type,\r\n    empId: null,\r\n    empLeadId: Id,\r\n    fromAdminId: { val: adminId == 1 ? \"\" : adminId, err: false },\r\n    RecruitmentFeePercentage: \"\",\r\n    ReplacementPolicy: \"\",\r\n    PaymentTerms: \"\",\r\n    PaymentType: \"\",\r\n    ccEmailId: {},\r\n    toEmail: toEmail,\r\n  });\r\n\r\n  const [showForm, setShowForm] = useState(true);\r\n  const [adminSignaturenot, setadminSignaturenot] = useState(false);\r\n\r\n  const [responseDetails, setResponseDetails] = useState({\r\n    isLoading: false,\r\n    completed: false,\r\n    failed: false,\r\n  });\r\n\r\n  function handleFromAdminChange(e) {\r\n    let { value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      fromAdminId: { val: value, err: false },\r\n    }));\r\n  }\r\n  const buttonSx = {\r\n    ...(responseDetails.completed && {\r\n      bgcolor: green[500],\r\n      \"&:hover\": {\r\n        bgcolor: green[700],\r\n      },\r\n    }),\r\n  };\r\n\r\n  function handleClose(e) {\r\n    e.preventDefault();\r\n    console.log(\"hiii\");\r\n    onClose();\r\n    setResponseDetails((prev) => {\r\n      return { ...prev, completed: false };\r\n    });\r\n    setFormData({\r\n      type: type,\r\n      empId: null,\r\n      empLeadId: Id,\r\n      fromAdminId: { val: adminId == 1 ? \"\" : adminId, err: false },\r\n      RecruitmentFeePercentage: \"\",\r\n      ReplacementPolicy: \"\",\r\n      PaymentTerms: \"\",\r\n    });\r\n  }\r\n\r\n  const handleInputChange = (event, type) => {\r\n    const { name, value } = event.target;\r\n    if (type == \"RecruitmentFeePercentage\") {\r\n      const regex = /^[0-9]*\\.?[0-9]*$/;\r\n      if (regex.test(value)) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: value,\r\n        });\r\n      }\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form Data:\", formData);\r\n    const ccEmailArray = formData.ccEmailId\r\n      .split(\",\")\r\n      .map((email) => email.trim());\r\n\r\n    // const updatedFormData = { ...formData, ccEmailArray };\r\n    setResponseDetails((prev) => {\r\n      return { ...prev, isLoading: true };\r\n    });\r\n    PostSlaMail({ ...formData, ccEmailArray })\r\n      .then((data) => {\r\n        if (data.statusCode === 400) {\r\n          setadminSignaturenot(true);\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          setResponseDetails((prev) => {\r\n            return { ...prev, isLoading: false, completed: true };\r\n          });\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          onClose();\r\n          setResponseDetails((prev) => {\r\n            return { ...prev, completed: false };\r\n          });\r\n          setShowForm(false);\r\n          onSuccess();\r\n          setFormData({\r\n            type: type,\r\n            empId: null,\r\n            empLeadId: Id,\r\n            fromAdminId: { val: adminId == 1 ? \"\" : adminId, err: false },\r\n            RecruitmentFeePercentage: \"\",\r\n            ReplacementPolicy: \"\",\r\n            PaymentTerms: \"\",\r\n            PaymentType: \"\",\r\n          });\r\n        }, 3000);\r\n\r\n        // Handle success logic here\r\n      })\r\n      .catch((err) => {\r\n        alert(\"something went wrong:\" + err);\r\n      });\r\n\r\n    // You can send the form data to your server or perform any other actions\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={2000}\r\n            childComponent={\r\n              <>\r\n                <h5 className=\"text-center\"> Send SLA Mail </h5>\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    handleSubmit(e);\r\n                  }}\r\n                >\r\n                  {isSuperAdmin && (\r\n                    <>\r\n                      <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">\r\n                            SLA Mail From\r\n                          </InputLabel>\r\n                          <Select\r\n                            MenuProps={{\r\n                              style: {\r\n                                zIndex: 2000,\r\n                              },\r\n                            }}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            name=\"fromAdminId\"\r\n                            value={formData.fromAdminId.val}\r\n                            label=\"SLA Mail From\"\r\n                            onChange={(e) => {\r\n                              handleFromAdminChange(e);\r\n                            }}\r\n                            required\r\n                            autoComplete=\"off\"\r\n                          >\r\n                            <MenuItem value={2}>Sowmiya</MenuItem>\r\n                            <MenuItem value={4}>Anees</MenuItem>\r\n                            <MenuItem value={7}>Saravanan</MenuItem>\r\n                            <MenuItem value={13}>Nirmala</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Box>\r\n                    </>\r\n                  )}\r\n                  <FormControl fullWidth style={{ marginTop: \"16px\" }}>\r\n                    {\" \"}\r\n                    <TextField\r\n                      id=\"employerToEmail\"\r\n                      label=\"To Email\"\r\n                      variant=\"outlined\"\r\n                      value={formData.toEmail}\r\n                      onChange={(e) =>\r\n                        setFormData((prev) => ({\r\n                          ...prev,\r\n                          toEmail: e.target.value,\r\n                        }))\r\n                      }\r\n                      fullWidth\r\n                      // required\r\n                      type=\"email\"\r\n                      margin=\"normal\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl fullWidth style={{ marginTop: \"16px\" }}>\r\n                    <InputLabel>Replacement policy Months</InputLabel>\r\n                    <Select\r\n                      MenuProps={{\r\n                        style: {\r\n                          zIndex: 2000,\r\n                        },\r\n                      }}\r\n                      name=\"ReplacementPolicy\"\r\n                      value={formData.ReplacementPolicy}\r\n                      onChange={handleInputChange}\r\n                      label=\"Replacement policy Months\"\r\n                      required\r\n                      autoComplete=\"off\"\r\n                    >\r\n                      <MenuItem value=\"1 Month\">1 Month</MenuItem>\r\n                      <MenuItem value=\"2 Months\">2 Months</MenuItem>\r\n                      <MenuItem value=\"3 Months\">3 Months</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl fullWidth style={{ marginTop: \"16px\" }}>\r\n                    <InputLabel>Payment Terms Days</InputLabel>\r\n                    <Select\r\n                      MenuProps={{\r\n                        style: {\r\n                          zIndex: 2000,\r\n                        },\r\n                      }}\r\n                      name=\"PaymentTerms\"\r\n                      value={formData.PaymentTerms}\r\n                      onChange={handleInputChange}\r\n                      label=\"Payment Terms Days\"\r\n                      required\r\n                      autoComplete=\"off\"\r\n                    >\r\n                      <MenuItem value=\"15 Days\">15 Days</MenuItem>\r\n                      <MenuItem value=\"30 Days\">30 Days</MenuItem>\r\n                      <MenuItem value=\"45 Days\">45 Days</MenuItem>\r\n                      <MenuItem value=\"60 Days\">60 Days</MenuItem>\r\n                      <MenuItem value=\"90 Days\">90 Days</MenuItem>\r\n\r\n                      {/* Add more event types as needed */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl fullWidth style={{ marginTop: \"16px\" }}>\r\n                    <InputLabel> Payment Type </InputLabel>\r\n                    <Select\r\n                      MenuProps={{\r\n                        style: {\r\n                          zIndex: 2000,\r\n                        },\r\n                      }}\r\n                      name=\"PaymentType\"\r\n                      value={formData.PaymentType}\r\n                      onChange={(e) => {\r\n                        handleInputChange(e, \"PaymentType\");\r\n                      }}\r\n                      label=\"Payment Terms Days\"\r\n                      required\r\n                      autoComplete=\"off\"\r\n                    >\r\n                      <MenuItem value=\"CTC\">CTC</MenuItem>\r\n                      <MenuItem value=\"Gross Salary\">Gross Salary</MenuItem>\r\n                      <MenuItem value=\"Gross Wages\">Gross Wages</MenuItem>\r\n\r\n                      {/* Add more event types as needed */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl\r\n                    fullWidth\r\n                    style={{ marginTop: \"25px\", zIndex: \"10001\" }}\r\n                  >\r\n                    <TextField\r\n                      name=\"RecruitmentFeePercentage\"\r\n                      id=\"outlined-textarea\"\r\n                      label=\"Recruitment fee %\"\r\n                      value={formData.RecruitmentFeePercentage}\r\n                      onChange={(e) => {\r\n                        handleInputChange(e, \"RecruitmentFeePercentage\");\r\n                      }}\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"Percentage\"\r\n                      required\r\n                      inputProps={{ maxLength: 5 }}\r\n\r\n                      // helperText={formData.notes.length + \"/250\"}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl fullWidth style={{ marginTop: \"16px\" }}>\r\n                    {\" \"}\r\n                    <TextField\r\n                      id=\"employerEmail\"\r\n                      label=\"CC Mail\"\r\n                      variant=\"outlined\"\r\n                      // value={formData.ccEmailId}\r\n                      onChange={(e) =>\r\n                        setFormData((prev) => ({\r\n                          ...prev,\r\n                          ccEmailId: e.target.value,\r\n                        }))\r\n                      }\r\n                      fullWidth\r\n                      // required\r\n                      type=\"\"\r\n                      margin=\"normal\"\r\n                    />\r\n                  </FormControl>\r\n\r\n                  <Box mt={2}>\r\n                    <Box sx={{ m: 1, position: \"relative\" }}>\r\n                      <div className=\" d-flex justify-content-end gap-2\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"error\"\r\n                          // sx={buttonSx}\r\n                          onClick={(e) => {\r\n                            handleClose(e);\r\n                          }}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          sx={buttonSx}\r\n                          disabled={\r\n                            responseDetails.isLoading ||\r\n                            responseDetails.completed\r\n                          }\r\n                        >\r\n                          {responseDetails.completed && \"Success\"}\r\n                          {responseDetails.failed && \"Failed\"}\r\n                          {responseDetails.isLoading && \"Loading\"}\r\n                          {!responseDetails.completed &&\r\n                            !responseDetails.isLoading &&\r\n                            \"Submit\"}\r\n                          {responseDetails.isLoading && (\r\n                            <CircularProgress\r\n                              size={24}\r\n                              sx={{\r\n                                color: green[500],\r\n                                position: \"absolute\",\r\n                                top: \"50%\",\r\n                                left: \"50%\",\r\n                                marginTop: \"-12px\",\r\n                                marginLeft: \"-12px\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </Button>\r\n                      </div>\r\n                    </Box>\r\n                  </Box>\r\n                </form>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n\r\n        {adminSignaturenot && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex={5000}\r\n              childComponent={\r\n                <>\r\n                  <div style={{ width: \"300px\" }}>\r\n                    <div className=\"\">This admin has no signature </div>\r\n                    <div className=\"d-flex justify-content-end mt-2\">\r\n                      <div\r\n                        className=\"btn btn-danger \"\r\n                        onClick={() => {\r\n                          setadminSignaturenot(false);\r\n                        }}\r\n                      >\r\n                        Ok\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n        {/* {responseDetails.completed && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={<SuccessTick HeadText=\"Successfully\" />}\r\n            />\r\n          </MyModal>\r\n        )} */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Ddmmmyyyy_date } from \"../../../../utility\";\r\n\r\nconst TimeLineDetails = ({ dataObject, close }) => {\r\n  console.log(dataObject);\r\n  let data = dataObject.details;\r\n  return (\r\n    <>\r\n      <div>\r\n        <div\r\n          className=\"d-grid justify-content-end mx-sm-4\"\r\n          style={{ marginTop: -20 }}\r\n        >\r\n          <button className=\" btn btn-outline-danger p-1\" onClick={close}>\r\n            <CloseIcon />\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <strong>Event:</strong>\r\n          &nbsp;{data.eventName}\r\n        </p>\r\n        <p>\r\n          <strong>Description:&nbsp;</strong>\r\n          <div\r\n            className=\"d-inline\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: data.eventDescription,\r\n            }}\r\n          />{\" \"}\r\n        </p>\r\n\r\n        {data.notes && (\r\n          <p>\r\n            <strong>Notes:</strong>\r\n            &nbsp;{data.notes}\r\n          </p>\r\n        )}\r\n        <p>\r\n          {\" \"}\r\n          <strong>Posted On:</strong>\r\n          &nbsp;{<Ddmmmyyyy_date dateValue={data.createdTime} />}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimeLineDetails;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport { timelineOppositeContentClasses } from \"@mui/lab/TimelineOppositeContent\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Timeline from \"@mui/lab/Timeline\";\r\nimport TimelineItem from \"@mui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@mui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@mui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@mui/lab/TimelineContent\";\r\nimport TimelineDot from \"@mui/lab/TimelineDot\";\r\nimport TimelineOppositeContent from \"@mui/lab/TimelineOppositeContent\";\r\nimport { Card, Pagination } from \"@mui/material\";\r\nimport { GetEmpLeadTimeline } from \"../../../../apiServices\";\r\nimport style from \"../../../Candidate/CandidateTimeLine/CandidateTimeline.module.scss\";\r\nimport { Ddmmmyyyy_date, MyModal, textTruncate } from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport TimeLineDetails from \"./timeLineDetails\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { employerTimelineActions } from \"../../../../redux-store/store\";\r\n\r\n// import TimeLineFilter from \"./components/timeLineFilter\";\r\n\r\nexport default function EmployerLeadTimeline({ id }) {\r\n  const [timeLine, setTimeLine] = useState({\r\n    content: [],\r\n    totalPages: 0,\r\n  });\r\n  const [timeLineDetails, setTimeLineDetails] = useState({\r\n    details: {},\r\n    showPopup: false,\r\n  });\r\n\r\n  const timelineFilter = useSelector(\r\n    (state) => state.employerTimeline.employerLeadTimeline.filter\r\n  );\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function SetTimeLineDetails(data) {\r\n    setTimeLineDetails((prev) => ({ ...prev, details: data, showPopup: true }));\r\n  }\r\n\r\n  function handleTimelineOpen(value) {\r\n    // setTimeline((prev) => ({ ...prev, empLeadId: el.id, showTimeline: true }));\r\n    Dispatch(employerTimelineActions.setShowEmpLeadTimeline(value));\r\n  }\r\n\r\n  function handlePopupClose() {\r\n    setTimeLineDetails((prev) => ({\r\n      ...prev,\r\n      showPopup: false,\r\n    }));\r\n  }\r\n\r\n  function getEmpTimeline() {\r\n    GetEmpLeadTimeline(id, timelineFilter)\r\n      .then((res) => {\r\n        setTimeLine((prev) => ({\r\n          ...prev,\r\n          content: res.content,\r\n          totalPages: res.totalPages,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getEmpTimeline();\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <div className=\"d-flex flex-row justify-content-end\">\r\n          <EmpLeadAddTimeLineForm\r\n            onSuccess={() => {\r\n              getEmpTimeline();\r\n            }}\r\n            empLeadId={id}\r\n          />\r\n          <Button\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleTimelineOpen(false);\r\n            }}\r\n          >\r\n            <Close />\r\n          </Button>\r\n        </div> */}\r\n        <Timeline\r\n          sx={{\r\n            [`& .${timelineOppositeContentClasses.root}`]: {\r\n              flex: 0.2,\r\n            },\r\n          }}\r\n        >\r\n          <div className={`${style.timeLineWrp}`}>\r\n            {timeLine.content.length == 0 && (\r\n              <>\r\n                <div className=\"d-flex justify-content-center mt-5\">\r\n                  <p className=\"text-center text-danger\">\r\n                    <b>No Timeline Found</b>\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {timeLine.content.map((element, index) => (\r\n              <TimelineItem key={index}>\r\n                <TimelineOppositeContent color=\"textSecondary\">\r\n                  <div style={{ marginLeft: -20 }}>\r\n                    <Ddmmmyyyy_date dateValue={element.createdTime} />\r\n                  </div>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineDot />\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent\r\n                  onClick={() => {\r\n                    SetTimeLineDetails(element);\r\n                  }}\r\n                >\r\n                  &nbsp;\r\n                  <Card sx={{ cursor: \"pointer\" }}>\r\n                    <div className=\"p-3\">\r\n                      <div>\r\n                        <strong>{element.eventName}</strong>\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: element.eventDescription,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        {element.notes ? (\r\n                          <>\r\n                            <strong>Notes</strong>: &nbsp;\r\n                            {textTruncate(element.notes, 20)}\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            ))}\r\n\r\n            {/* {!showFilterForm &&\r\n              timeLine.content.map((element, index) => (\r\n                <TimelineItem key={index}>\r\n                  <TimelineOppositeContent color=\"textSecondary\">\r\n                    <div style={{ marginLeft: -20 }}>\r\n                      <Ddmmmyyyy_date dateValue={element.createdTime} />\r\n                    </div>\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent\r\n                    onClick={() => {\r\n                      handlePopupOpen(element);\r\n                    }}\r\n                  >\r\n                    &nbsp;\r\n                    <Card sx={{ cursor: \"pointer\" }}>\r\n                      <div className=\"p-3\">\r\n                        <div>\r\n                          <strong>{element.eventName}</strong>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: element.eventDescription,\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          {element.notes ? (\r\n                            <>\r\n                              <strong>Notes</strong>: &nbsp;\r\n                              {textTruncate(element.notes, 20)}\r\n                            </>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Card>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))} */}\r\n\r\n            <div className=\"d-flex justify-content-center mt-4\">\r\n              <Pagination\r\n                count={timeLine.totalPages}\r\n                variant=\"outlined\"\r\n                page={page + 1}\r\n                onChange={(e, currentPage) => setPage(currentPage - 1)}\r\n                siblingCount={1}\r\n                color=\"primary\"\r\n                hidePrevButton\r\n                hideNextButton\r\n              />\r\n            </div>\r\n          </div>\r\n        </Timeline>\r\n        <div>\r\n          {/* {timeLineDetails.showPopup && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={10000}\r\n                childComponent={\r\n                  <>\r\n                \r\n                    <TimeLineDetails\r\n                      close={handlePopupClose}\r\n                      dataObject={timeLineDetails}\r\n                    />\r\n                  </>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )} */}\r\n\r\n          {timeLineDetails.showPopup && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={10000}\r\n                childComponent={\r\n                  <>\r\n                    {/*  */}\r\n                    <TimeLineDetails\r\n                      close={handlePopupClose}\r\n                      dataObject={timeLineDetails}\r\n                    />\r\n                  </>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { PostEmpLeadTimeLine } from \"../../../../apiServices\";\r\nimport { Card, CardContent, CircularProgress } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\n\r\nexport default function EmpLeadAddTimeLineForm({ empLeadId, onSuccess }) {\r\n  const [formData, setFormData] = useState({\r\n    empLeadId: empLeadId,\r\n    eventType: \"\",\r\n    notes: \"\",\r\n  });\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [responseDetails, setResponseDetails] = useState({\r\n    isLoading: false,\r\n    completed: false,\r\n    failed: false,\r\n  });\r\n\r\n  const [eventOptions, setEventOptions] = useState();\r\n\r\n  // function GetTimelineEvents() {\r\n  //   GetEmpTimelineEvents().then((data) => {\r\n  //     setEventOptions(data);\r\n  //   });\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   GetTimelineEvents();\r\n  // }, []);\r\n\r\n  const buttonSx = {\r\n    ...(responseDetails.completed && {\r\n      bgcolor: green[500],\r\n      \"&:hover\": {\r\n        bgcolor: green[700],\r\n      },\r\n    }),\r\n  };\r\n\r\n  function handleClose() {\r\n    setResponseDetails((prev) => {\r\n      return { ...prev, completed: false };\r\n    });\r\n    setFormData({\r\n      empLeadId: empLeadId,\r\n      eventType: \"\",\r\n      notes: \"\",\r\n    });\r\n\r\n    setShowForm(false);\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission logic here\r\n    console.log(\"Form Data:\", formData);\r\n    setResponseDetails((prev) => {\r\n      return { ...prev, isLoading: true };\r\n    });\r\n    PostEmpLeadTimeLine(formData).then(() => {\r\n      setTimeout(() => {\r\n        setResponseDetails((prev) => {\r\n          return { ...prev, isLoading: false, completed: true };\r\n        });\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        setResponseDetails((prev) => {\r\n          return { ...prev, completed: false };\r\n        });\r\n        setShowForm(false);\r\n      }, 3000);\r\n      setFormData({\r\n        empLeadId: empLeadId,\r\n        eventType: \"\",\r\n        notes: \"\",\r\n      });\r\n\r\n      // Handle success logic here\r\n    });\r\n\r\n    // You can send the form data to your server or perform any other actions\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <div className=\"d-grid justify-content-end\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setShowForm(true);\r\n            }}\r\n            size=\"small\"\r\n          >\r\n            + Add Notes\r\n          </Button>\r\n        </div>\r\n        {showForm && ( */}\r\n        {/* <MyModal>\r\n          <ModalContainer\r\n            zIndex={1006}\r\n            childComponent={\r\n              <>\r\n                <h5 className=\"text-center\"> Add Notes </h5>\r\n              \r\n              </>\r\n            }\r\n          />\r\n        </MyModal> */}\r\n        {/* // )} */}\r\n        {/* {responseDetails.completed && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={<SuccessTick HeadText=\"Successfully\" />}\r\n            />\r\n          </MyModal>\r\n        )} */}\r\n        <Card style={{ maxWidth: 700, margin: \"0 auto\" }}>\r\n          <CardContent>\r\n            {\" \"}\r\n            <form\r\n              onSubmit={(e) => {\r\n                handleSubmit(e);\r\n              }}\r\n            >\r\n              <FormControl fullWidth style={{ marginTop: \"16px\" }}>\r\n                <InputLabel>Event Type</InputLabel>\r\n                <Select\r\n                  name=\"eventType\"\r\n                  value={formData.eventType}\r\n                  onChange={handleInputChange}\r\n                  label=\"Event Type\"\r\n                  required\r\n                >\r\n                  {/* {eventOptions.map((el) => {\r\n                          return (\r\n                            <MenuItem value={el.eventName}>\r\n                              {el.eventName}\r\n                            </MenuItem>\r\n                          );\r\n                        })} */}\r\n\r\n                  <MenuItem value=\"CSS Intro call\">CSS Intro call</MenuItem>\r\n                  {/* Add more event types as needed */}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl\r\n                fullWidth\r\n                style={{ marginTop: \"25px\", zIndex: \"10001\" }}\r\n              >\r\n                <TextField\r\n                  name=\"notes\"\r\n                  id=\"outlined-textarea\"\r\n                  label=\"Notes\"\r\n                  value={formData.notes}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Add Notes\"\r\n                  required\r\n                  inputProps={{ maxLength: 250 }}\r\n                  multiline\r\n                  helperText={formData.notes.length + \"/250\"}\r\n                />\r\n              </FormControl>\r\n\r\n              <Box mt={2}>\r\n                <Box sx={{ m: 1, position: \"relative\" }}>\r\n                  <div className=\" d-flex justify-content-end gap-2\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"error\"\r\n                      // sx={buttonSx}\r\n                      onClick={() => {\r\n                        handleClose();\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      sx={buttonSx}\r\n                      disabled={\r\n                        responseDetails.isLoading || responseDetails.completed\r\n                      }\r\n                    >\r\n                      {responseDetails.completed && \"Success\"}\r\n                      {responseDetails.failed && \"Failed\"}\r\n                      {responseDetails.isLoading && \"Loading\"}\r\n                      {!responseDetails.completed &&\r\n                        !responseDetails.isLoading &&\r\n                        \"Submit\"}\r\n                    </Button>\r\n                    {responseDetails.isLoading && (\r\n                      <CircularProgress\r\n                        size={24}\r\n                        sx={{\r\n                          color: green[500],\r\n                          position: \"absolute\",\r\n                          top: \"50%\",\r\n                          left: \"50%\",\r\n                          marginTop: \"-12px\",\r\n                          marginLeft: \"-12px\",\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </Box>\r\n              </Box>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-target-blank */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { RxCross2, RxCrossCircled } from \"react-icons/rx\";\r\nimport {\r\n  DDMMYYYY_formate,\r\n  Detailsshow,\r\n  MyModal,\r\n  emailValidation,\r\n} from \"../../../utility\";\r\nimport ModalContainer from \"../../modal_popup\";\r\nimport DetailsContainer from \"../../DetailsContainer\";\r\nimport EmployerDetailsStyle from \"./EmployerDetailsview.module.scss\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  PostIntroMail,\r\n  PutEmployerIsQualified,\r\n  PutEmployerLeadCheck,\r\n} from \"../../../apiServices\";\r\nimport companylogo from \"../../../assets/images/Company-Logo.png\";\r\nimport FBStyle from \"../../../pages/Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\nimport { useRef } from \"react\";\r\nimport { PiDotsThreeOutlineVerticalFill } from \"react-icons/pi\";\r\nimport { LiaUserEditSolid } from \"react-icons/lia\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\nimport flag from \"../../../assets/images/flag.png\";\r\nimport WhatsappImage from \"../../../assets/images/whatsapp-logo-removebg-preview.png\";\r\nimport { MdCall, MdEmail, MdOutlineContentCopy } from \"react-icons/md\";\r\nimport candidateTabsviewStyle from \"../../../pages/Tabsview/Candidate/CandidateTabsview.module.scss\";\r\nimport { styled as muiStyled } from \"@mui/material/styles\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Box,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport ScheduleInterview from \"../../../pages/Candidate/CandidateInterview/scheduleInterview\";\r\nimport { webConsoleBaseUrl } from \"../../../App\";\r\nimport { commonPopupActions } from \"../../../redux-store/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SuccessTick from \"../../success_tick\";\r\nimport ConfirmationPopup from \"../confirmationPopup\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport EmployerSendSLA from \"../../../pages/Employer/employerLead/sendSLA\";\r\nimport EmployerLeadTimeline from \"../../../pages/Employer/employerLead/LeadTimeLine/TimelineView\";\r\nimport EmpLeadAddTimeLineForm from \"../../../pages/Employer/employerLead/LeadTimeLine/addTimelines\";\r\nconst VisuallyHiddenInput = muiStyled(\"input\")({\r\n  clip: \"rect(0 0 0 0)\",\r\n  clipPath: \"inset(50%)\",\r\n  height: 1,\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: \"50px\",\r\n  left: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: 1,\r\n});\r\n\r\nconst buttonStyle = {\r\n  // display: 'inline-block',\r\n  margin: \"0 auto\", // Centers the button horizontally\r\n  marginTop: \"5vh\", // Centers the button vertically; adjust as needed\r\n};\r\nconst EmployerLeadDetailsView = ({ employerDetails, onClose }) => {\r\n  const [adminName, setAdminName] = useState([]);\r\n  const [adminid, setAdminId] = useState([]);\r\n  const [assignToName, setAssignToName] = useState(\"\");\r\n  //   const EmpId = Id;\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [emailsendshow, setEmailsendshow] = useState(false);\r\n  //   const [employerDetails, setEmployerDetails] = useState({});\r\n  const [isQualifiedDetails, setIsQualifiedDetails] = useState({\r\n    confirmtext: \"\",\r\n    qualified: \"\",\r\n    notQualified: \"\",\r\n    openPopup: false,\r\n    empLeadId: \"\",\r\n  });\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showEmployerSendSLA, setShowEmployerSendSLA] = useState(false);\r\n  const [ShowModal, SetShowModal] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const adminId = localStorage.getItem(\"adminID\");\r\n  const [adminSignaturenot, setadminSignaturenot] = useState(false);\r\n\r\n  const [showLoader, setShowLoader] = useState(false); // New state for loader\r\n  const adminDetailsRole = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetailsRole.roleID === 1;\r\n  const [assignAdminto, setAssignAdminto] = useState({\r\n    candidateId: \"\",\r\n    adminId: \"\",\r\n  });\r\n  const [adminDetails, setAdminDetails] = useState({\r\n    id: null,\r\n    adminName: [],\r\n  });\r\n  const Dispatch = useDispatch();\r\n  function handleEmployerDetailsClose() {\r\n    // Use history.goBack() to go back one page in the browser history\r\n    // navigate(\"/candidate_Job\");\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"hide\",\r\n      })\r\n    );\r\n  }\r\n  const [mailDetails, setMailDetails] = useState({\r\n    ccMail: { val: \"\", err: \"\" },\r\n    paymentDays: { val: \"\", err: \"\" },\r\n    leadId: employerDetails.id,\r\n    fromAdminId: { val: adminId == 1 ? \"\" : adminId, err: false },\r\n  });\r\n  const [show, setShow] = useState({\r\n    resendIntro: false,\r\n    showSuccess: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(show, \"show\");\r\n  }, [show]);\r\n\r\n  function handleIntroMailResend(e) {\r\n    e.preventDefault();\r\n    let error = 0;\r\n    if (mailDetails.ccMail.val) {\r\n      if (!emailValidation(mailDetails.ccMail.val)) {\r\n        setMailDetails((prev) => ({\r\n          ...prev,\r\n          ccMail: { ...prev.ccMail, err: \"Please enter valid email id\" },\r\n        }));\r\n\r\n        error++;\r\n        // setShow((prev) => ({ ...prev, resendIntro: true }));\r\n      } else {\r\n        setMailDetails((prev) => ({\r\n          ...prev,\r\n          ccMail: { ...prev.ccMail, err: \"\" },\r\n        }));\r\n      }\r\n    }\r\n    // setShowSuccess(true);\r\n    if (error == 0) {\r\n      setIsLoading(true);\r\n      PostIntroMail(mailDetails)\r\n        .then((data) => {\r\n          if (data.statusCode === 400) {\r\n            setadminSignaturenot(true);\r\n            return;\r\n          }\r\n          setShow((prev) => ({ ...prev, showSuccess: true }));\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Something went wrong \" + err);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n          setTimeout(() => {\r\n            // setShowSuccess(false);\r\n            handleClose();\r\n          }, 3000);\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleIntroMailChange(e) {\r\n    let { value } = e.target;\r\n    setMailDetails((prev) => ({ ...prev, ccMail: { val: value, err: \"\" } }));\r\n  }\r\n  function handlePaymentChange(e) {\r\n    let { value } = e.target;\r\n    setMailDetails((prev) => ({\r\n      ...prev,\r\n      paymentDays: { val: value, err: \"\" },\r\n    }));\r\n  }\r\n  function handleClose() {\r\n    setShow({\r\n      resendIntro: false,\r\n      showSuccess: false,\r\n    });\r\n  }\r\n\r\n  const [showScheduleInterview, setShowScheduleInterview] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const params = window.location.href;\r\n\r\n    let isShowScheduleInterview = params.includes(\"interview_schedule_list\");\r\n    console.log(params, \"parameterrrs\");\r\n    setShowScheduleInterview(!isShowScheduleInterview);\r\n  }, []);\r\n\r\n  const [documentTitles, setDocumentTitles] = useState([]);\r\n\r\n  const handleTabClick = (tabNumber) => {\r\n    setActiveTab(tabNumber);\r\n  };\r\n  console.log(employerDetails.id, \"Employer ids\");\r\n\r\n  const inputRef = {\r\n    qualified: useRef(),\r\n    notQualified: useRef(),\r\n    // rescheduled: useRef(),\r\n  };\r\n  const handleButtonClick = (refName) => {\r\n    const ref = inputRef[refName];\r\n    if (ref.current) {\r\n      ref.current.click();\r\n    }\r\n  };\r\n  const closeSLA = () => {\r\n    setShowEmployerSendSLA(false);\r\n  };\r\n  function openIsQualifyPopup(status) {\r\n    let confirmText = \"\";\r\n    let isQualified;\r\n    if (status == \"qualify\") {\r\n      confirmText = `Are you sure you want to qualify <b>${employerDetails.companyName}</b> `;\r\n      isQualified = true;\r\n    } else {\r\n      confirmText = `Are you sure you want to not qualify <b>${employerDetails.companyName}</b> `;\r\n      isQualified = false;\r\n    }\r\n    setIsQualifiedDetails((prev) => ({\r\n      ...prev,\r\n      openPopup: true,\r\n      confirmtext: confirmText,\r\n      qualified: isQualified,\r\n      notQualified: !isQualified,\r\n      empLeadId: employerDetails.id,\r\n    }));\r\n  }\r\n\r\n  function handleConfirmationClose() {\r\n    setIsQualifiedDetails((prev) => ({\r\n      ...prev,\r\n      openPopup: false,\r\n    }));\r\n  }\r\n\r\n  function ConfirmFormSubmit() {\r\n    PutEmployerLeadCheck(isQualifiedDetails)\r\n      .then((data) => {\r\n        // setShowLoader(true);\r\n        setIsQualifiedDetails((prev) => ({\r\n          ...prev,\r\n          openPopup: false,\r\n        }));\r\n\r\n        employerDetails();\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function getEmployerStatus(employer) {\r\n    console.log(employer);\r\n    if (employer.contactDetailsFilled && employer.regProofNumber != null) {\r\n      return <span className=\"text-success\"> Completed</span>;\r\n    } else if (!employer.contactDetailsFilled) {\r\n      return <span className=\"text-danger\"> Step 2</span>;\r\n    } else if (\r\n      employer.contactDetailsFilled &&\r\n      employer.regProofNumber == null\r\n    ) {\r\n      return <span className=\"text-warning\"> Step 3</span>;\r\n    } else {\r\n    }\r\n  }\r\n  const handleWhatsAppIconClick = (phoneNumber) => {\r\n    // console.log(event)\r\n    const whatsappURL = `https://api.whatsapp.com/send?phone=${phoneNumber}`;\r\n    window.open(whatsappURL, \"_blank\");\r\n  };\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const handleCopyNumber = (phoneNumber, whatsappNumber) => {\r\n    navigator.clipboard.writeText(phoneNumber, whatsappNumber).then(() => {\r\n      setIsCopied(true);\r\n    });\r\n  };\r\n  function handleFromAdminChange(e) {\r\n    let { value } = e.target;\r\n    setMailDetails((prev) => ({\r\n      ...prev,\r\n      fromAdminId: { val: value, err: false },\r\n    }));\r\n  }\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminNames = data.map((item) => item.userName);\r\n      const adminIds = data.map((item) => item.id);\r\n      setAdminName(adminNames);\r\n      setAdminId(adminIds);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <div className=\"container-fluid\">\r\n        <div className=\"row d-flex justify-content-end\">\r\n          <RxCross2 />\r\n        </div>\r\n      </div> */}\r\n      <Detailsshow>\r\n        <DetailsContainer\r\n          topComponent={\r\n            <>\r\n              <div className={`${EmployerDetailsStyle.boxcross}`}>\r\n                <div\r\n                  className={` ${EmployerDetailsStyle.CrossStyle} pe-5 pe-lg-4`}\r\n                >\r\n                  <b>\r\n                    <RxCross2\r\n                      onClick={() => {\r\n                        onClose();\r\n                      }}\r\n                    />\r\n                  </b>\r\n                </div>\r\n              </div>\r\n            </>\r\n          }\r\n          childComponent={\r\n            <>\r\n              <div className={`${EmployerDetailsStyle.boxwidth}`}>\r\n                <div className=\"container-fluid\">\r\n                  <div className={`row ${EmployerDetailsStyle.topcontainer}`}>\r\n                    <div className=\"col-sm-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          {\" \"}\r\n                          {employerDetails.companyLogo ? (\r\n                            <img\r\n                              src={employerDetails.companyLogo}\r\n                              alt=\"employer Profile\"\r\n                              width={80}\r\n                            />\r\n                          ) : (\r\n                            <img src={companylogo} alt=\"Profile\" width={80} />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <div>\r\n                            <b>{employerDetails.companyName}</b>\r\n                          </div>\r\n                          <div>\r\n                            {employerDetails.industry ? (\r\n                              <>{employerDetails.industry}</>\r\n                            ) : (\r\n                              <> </>\r\n                            )}{\" \"}\r\n                          </div>\r\n                          <div>\r\n                            <div className={``}>\r\n                              <div className={`${FBStyle.StatusStyle}`}>\r\n                                <div>\r\n                                  <>\r\n                                    {employerDetails.qualified === true && (\r\n                                      <div className={`${FBStyle.Green_wrp}`}>\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          name={`status_${employerDetails.id}`}\r\n                                          checked={employerDetails.qualified}\r\n                                          id={`qualified_${employerDetails.id}`}\r\n                                        />\r\n                                        <label\r\n                                          htmlFor={`qualified_${employerDetails.id}`}\r\n                                        >\r\n                                          Qualified\r\n                                        </label>\r\n                                      </div>\r\n                                    )}\r\n\r\n                                    {employerDetails.notQualified === true && (\r\n                                      <div className={`${FBStyle.chips_wrp}`}>\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          checked={employerDetails.notQualified}\r\n                                          name={`status_${employerDetails.id}`}\r\n                                          id={`notQualified_${employerDetails.id}`}\r\n                                        />\r\n                                        <label\r\n                                          htmlFor={`notQualified_${employerDetails.id}`}\r\n                                        >\r\n                                          Not Qualified\r\n                                        </label>\r\n                                      </div>\r\n                                    )}\r\n                                  </>\r\n                                </div>\r\n                                <div className=\"btn-group dropstart\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    // className={`btn btn-light `}\r\n\r\n                                    data-bs-toggle=\"dropdown\"\r\n                                    data-bs-no-caret=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                    style={{\r\n                                      border: \"none\",\r\n                                      background: \"none\",\r\n                                      color: \"#000\",\r\n                                      cursor: \"pointer\",\r\n                                      outline: \"none\",\r\n                                      position: \"relative\",\r\n                                      right: \"5px\",\r\n                                      // backgroundColor: \"red\",\r\n                                      fontSize: 20,\r\n                                      zIndex: 1,\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"\">\r\n                                      {\" \"}\r\n                                      <BsThreeDotsVertical />{\" \"}\r\n                                    </span>\r\n                                    <AiOutlineEdit />\r\n                                  </button>{\" \"}\r\n                                  <ul\r\n                                    className=\"dropdown-menu\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                    // ref={dropdownRef}\r\n                                  >\r\n                                    <li\r\n                                      onClick={() => {\r\n                                        openIsQualifyPopup(\"qualify\");\r\n                                      }}\r\n                                    >\r\n                                      <a className=\"dropdown-item\" href=\"#\">\r\n                                        <div\r\n                                          className={`${FBStyle.select_wrp}`}\r\n                                          //   onClick={() => {\r\n                                          //     handleButtonClick(\"qualified\");\r\n                                          //     handleConfirmationOpenQualify(true);\r\n                                          //   }}\r\n                                        >\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            // ref={inputRef.qualified}\r\n                                            name={`status_${employerDetails.id}`}\r\n                                            checked={employerDetails.qualified}\r\n                                            id={`qualified_${employerDetails.id}`}\r\n                                          />\r\n\r\n                                          <label\r\n                                            htmlFor={`qualified_${employerDetails.id}`}\r\n                                          >\r\n                                            {\" \"}\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#169C50\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />\r\n                                            Qualified\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n                                    <li\r\n                                      onClick={() => {\r\n                                        openIsQualifyPopup(\"notQualify\");\r\n                                      }}\r\n                                    >\r\n                                      <a className=\"dropdown-item\" href=\"#\">\r\n                                        <div\r\n                                          className={`${FBStyle.select_wrp}`}\r\n                                        >\r\n                                          <input\r\n                                            // ref={inputRef.notQualified}\r\n                                            type=\"radio\"\r\n                                            checked={\r\n                                              employerDetails.notQualified\r\n                                            }\r\n                                            name={`status_${employerDetails.id}`}\r\n                                            id={`notQualified_${employerDetails.id}`}\r\n                                          />\r\n                                          <label\r\n                                            htmlFor={`notQualified_${employerDetails.id}`}\r\n                                          >\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#b2261c\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />{\" \"}\r\n                                            Not Qualified\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-1\">\r\n                        <div className={`${EmployerDetailsStyle.Createdon}`}>\r\n                          Created on :{\" \"}\r\n                          <DDMMYYYY_formate\r\n                            dateValue={employerDetails.createdTime}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col\">\r\n                      {\" \"}\r\n                      \r\n                    </div> */}\r\n                    <div className={`col-sm-8`}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          {/* <div\r\n                            className={`${EmployerDetailsStyle.verticalLine}`}\r\n                          ></div> */}\r\n                          {/* <div\r\n                            className={`${EmployerDetailsStyle.CandidatepastDetails}`}\r\n                          >\r\n                            <div>\r\n                              {\" \"}\r\n                              Joining Status <PiWarningCircleLight /> :\r\n                              immediate\r\n                            </div>\r\n                            <div>\r\n                              {\" \"}\r\n                              Employer Status <PiWarningCircleLight /> : working\r\n                            </div>\r\n                            <div>\r\n                              {\" \"}\r\n                              Previous Company <PiWarningCircleLight /> : Taizo\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <button className=\"btn\">\r\n                                <span className=\"\">\r\n                                  {\" \"}\r\n                                  <BsThreeDotsVertical />{\" \"}\r\n                                </span>\r\n                                <AiOutlineEdit />\r\n                              </button>\r\n                            </div>\r\n                          </div> */}\r\n                        </div>\r\n                        <div className=\"col-sm-8 \">\r\n                          <div className={`row `}>\r\n                            {/* ${EmployerDetailsStyle.flexContainer} */}\r\n                            <div\r\n                              className={`col-sm-12 ${EmployerDetailsStyle.flexContainer}`}\r\n                            >\r\n                              {/* <a\r\n                                href={`${webConsoleBaseUrl}/waNotifications/customCompanyDetailsUpload.html?empId=${employerDetails.id}&adminId=${adminId}`}\r\n                                target=\"_blank\"\r\n                                // className=\"nav-link\"\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                  color: \"black\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  className={`${EmployerDetailsStyle.LiaUserEditSolid}`}\r\n                                >\r\n                                  <div className=\"mb-1\">\r\n                                    {\" \"}\r\n                                    <LiaUserEditSolid />\r\n                                  </div>\r\n                                </div>\r\n                              </a> */}\r\n                              <div\r\n                                className={`${EmployerDetailsStyle.LiaUserEditSolid}`}\r\n                              >\r\n                                <div\r\n                                  className=\"mb-1\"\r\n                                  onClick={() =>\r\n                                    handleWhatsAppIconClick(\r\n                                      employerDetails.whatsappNumber\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <FaWhatsapp />\r\n                                </div>\r\n                              </div>\r\n                              <div>\r\n                                <div\r\n                                  className={`${EmployerDetailsStyle.SendEmail}`}\r\n                                  onClick={() => setEmailsendshow(true)}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                >\r\n                                  <MdEmail className=\"me-2\" /> Send Email\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"btn-group\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  // class=\"btn btn-secondary\"\r\n                                  data-bs-toggle=\"dropdown\"\r\n                                  data-bs-display=\"static\"\r\n                                  aria-expanded=\"false\"\r\n                                  style={{ border: \"none\" }}\r\n                                  className={`${EmployerDetailsStyle.ThreeOutline}`}\r\n                                >\r\n                                  <PiDotsThreeOutlineVerticalFill />\r\n                                </button>\r\n                                <ul class=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-end\">\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      {showScheduleInterview &&\r\n                                        employerDetails.id && (\r\n                                          <ScheduleInterview\r\n                                            candidateId={employerDetails.id}\r\n                                          />\r\n                                        )}\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      <MdCall /> +91{\" \"}\r\n                                      {employerDetails.mobileNumber}{\" \"}\r\n                                      <MdOutlineContentCopy\r\n                                        onClick={() =>\r\n                                          handleCopyNumber(\r\n                                            employerDetails.mobileNumber\r\n                                          )\r\n                                        }\r\n                                        className=\"ms-5\"\r\n                                      />\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      <FaWhatsapp /> +91{\" \"}\r\n                                      {employerDetails.whatsappNumber}{\" \"}\r\n                                      <MdOutlineContentCopy\r\n                                        onClick={() =>\r\n                                          handleCopyNumber(\r\n                                            employerDetails.whatsappNumber\r\n                                          )\r\n                                        }\r\n                                        className=\"ms-5\"\r\n                                      />\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <a\r\n                                      href={`${webConsoleBaseUrl}/waNotifications/customCandidateupdate.html?id=${employerDetails.id}&adminId=${adminId}`}\r\n                                      target=\"_blank\"\r\n                                      // className=\"nav-link\"\r\n                                      style={{\r\n                                        textDecoration: \"none\",\r\n                                        color: \"black\",\r\n                                      }}\r\n                                    >\r\n                                      <button\r\n                                        class=\"dropdown-item\"\r\n                                        type=\"button\"\r\n                                      >\r\n                                        <LiaUserEditSolid /> Edit Profile\r\n                                      </button>\r\n                                    </a>\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-2 px-4 \">\r\n                    <div\r\n                      className={`col-sm-4 pb-4 rounded ${EmployerDetailsStyle.personalDetails}`}\r\n                    >\r\n                      <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Company Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${EmployerDetailsStyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              No.of Employees\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              Reg.proof No.\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>KYC status</div>\r\n                            <div style={{ lineHeight: \"2\" }}>Year Founded</div>\r\n                            <div style={{ lineHeight: \"2\" }}>Reference</div>\r\n                            <div style={{ lineHeight: \"2\" }}>Address</div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            {\" \"}\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.noOfEmployees != null\r\n                                ? employerDetails.noOfEmployees\r\n                                : \"-\"}{\" \"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.regProofNumber != null\r\n                                ? employerDetails.regProofNumber\r\n                                : \"-\"}{\" \"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.kycStatus != null\r\n                                ? employerDetails.kycStatus\r\n                                : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.yearFounded != null\r\n                                ? employerDetails.yearFounded\r\n                                : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.reference != null\r\n                                ? employerDetails.reference\r\n                                : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.address != null\r\n                                ? employerDetails.address\r\n                                : \"-\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-2\">\r\n                        {\" \"}\r\n                        <h6>\r\n                          <b>Other Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${EmployerDetailsStyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>Lead Id </div>\r\n                            <div style={{ lineHeight: \"2\" }}>Name </div>\r\n                            <div style={{ lineHeight: \"2\" }}>Email Id</div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Current Location\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>Mobile Number</div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Whatsapp Number\r\n                            </div>\r\n                            <div style={{ lineHeight: \"3\" }}>Status</div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              {employerDetails.id != null\r\n                                ? employerDetails.id\r\n                                : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              {employerDetails.contactPersonName != null\r\n                                ? employerDetails.contactPersonName\r\n                                : \"-\"}\r\n                            </div>\r\n\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.emailId != null\r\n                                ? employerDetails.emailId\r\n                                : \"-\"}\r\n                            </div>\r\n\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {employerDetails.city != null\r\n                                ? employerDetails.city\r\n                                : \"-\"}{\" \"}\r\n                              ,{\" \"}\r\n                              {employerDetails.state != null\r\n                                ? employerDetails.state\r\n                                : \"-\"}\r\n                            </div>\r\n                            <div\r\n                              className=\"d-flex \"\r\n                              style={{ lineHeight: \"2\" }}\r\n                            >\r\n                              <div\r\n                                className={`me-3 ${EmployerDetailsStyle.numbersstyle}`}\r\n                              >\r\n                                <img src={flag} alt=\"\" width={15} />{\" \"}\r\n                                <span>{employerDetails.mobileNumber} </span>\r\n                                <MdOutlineContentCopy\r\n                                  onClick={() =>\r\n                                    handleCopyNumber(\r\n                                      employerDetails.mobileNumber\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className={`${EmployerDetailsStyle.Phonecall}`}\r\n                              >\r\n                                <MdCall />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex\" style={{ lineHeight: \"2\" }}>\r\n                              <div\r\n                                className={`me-3 ${EmployerDetailsStyle.Whatsapnumbersstyle}`}\r\n                              >\r\n                                <img src={WhatsappImage} alt=\"\" width={16} />\r\n                                <span>{employerDetails.whatsappNumber} </span>\r\n                                <MdOutlineContentCopy\r\n                                  onClick={() =>\r\n                                    handleCopyNumber(\r\n                                      employerDetails.whatsappNumber\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className={`${EmployerDetailsStyle.Phonecall}`}\r\n                              >\r\n                                <FaWhatsapp\r\n                                  onClick={() =>\r\n                                    handleWhatsAppIconClick(\r\n                                      employerDetails.whatsappNumber\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {getEmployerStatus(employerDetails)}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Other Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${EmployerDetailsStyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div>Form</div>\r\n                          </div>\r\n                          <div className=\"col-7 \">\r\n                            <div>\r\n                              <div>\r\n                                {employerDetails.fromWeb\r\n                                  ? \"Web\"\r\n                                  : employerDetails.fromApp\r\n                                  ? \"App\"\r\n                                  : employerDetails.fromAdmin\r\n                                  ? \"Admin\"\r\n                                  : \"-\"}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {isSuperAdmin && (\r\n                        <div className=\"mt-2\">\r\n                          <h6>\r\n                            <b>Admin Details</b>\r\n                          </h6>\r\n                          <div\r\n                            className={`row ${EmployerDetailsStyle.CanDetailsRow}`}\r\n                          >\r\n                            <div className=\"col-5\">\r\n                              <div>Assigned To</div>\r\n                            </div>\r\n                            <div className=\"col-7\">\r\n                              {\r\n                                adminName[\r\n                                  adminid.indexOf(employerDetails.assignTo)\r\n                                ]\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className={` col-sm-8 rounded  ${EmployerDetailsStyle.DailyDetailsupdate}`}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          className={`tab-buttons ${candidateTabsviewStyle.tab_buttons}`}\r\n                        >\r\n                          <div\r\n                            className={`d-flex ${candidateTabsviewStyle.tab_hr}`}\r\n                          >\r\n                            <div\r\n                              onClick={() => handleTabClick(1)}\r\n                              className={` ${\r\n                                activeTab === 1\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              } `}\r\n                            >\r\n                              TimeLine\r\n                            </div>\r\n                            <div\r\n                              onClick={() => handleTabClick(2)}\r\n                              className={` ${\r\n                                activeTab === 2\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Notes\r\n                            </div>\r\n                          </div>\r\n                          <hr style={{ borderTop: \"10px solid #ccc\" }} />\r\n                        </div>\r\n\r\n                        <div\r\n                          className={`tab-content ${candidateTabsviewStyle.tab_content}`}\r\n                        >\r\n                          {employerDetails.id && activeTab === 1 && (\r\n                            <p>\r\n                              <EmployerLeadTimeline id={employerDetails.id} />\r\n                            </p>\r\n                          )}\r\n                          {employerDetails.id && activeTab === 2 && (\r\n                            <p>\r\n                              <EmpLeadAddTimeLineForm\r\n                                empLeadId={employerDetails.id}\r\n                              />\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Backdrop\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  zIndex: (theme) => theme.zIndex.drawer + 1,\r\n                }}\r\n                open={showLoader}\r\n                onClick={() => {}} // Prevent closing on backdrop click\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n\r\n              {emailsendshow && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={2000}\r\n                    childComponent={\r\n                      <>\r\n                        <div\r\n                          className={`${EmployerDetailsStyle.BoxWidthchildComponent}`}\r\n                        >\r\n                          <>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-6\">Send Email</div>\r\n                              <div className=\"col-sm-6 d-flex justify-content-end\">\r\n                                <RxCrossCircled\r\n                                  className=\"text-danger fs-3\"\r\n                                  onClick={() => setEmailsendshow(false)}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <a href=\"#\" className=\"text-decoration-none\">\r\n                                {employerDetails.emailId}\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"p-3\">\r\n                              <div className=\"mt-2 mb-3\">\r\n                                <button\r\n                                  className={\r\n                                    EmployerDetailsStyle.Emailsendbutton\r\n                                  }\r\n                                  onClick={() => {\r\n                                    setShowEmployerSendSLA(\r\n                                      !showEmployerSendSLA\r\n                                    );\r\n                                    setEmailsendshow(false);\r\n                                  }}\r\n                                >\r\n                                  SLA Email\r\n                                </button>\r\n                              </div>\r\n\r\n                              <div>\r\n                                {\" \"}\r\n                                <button\r\n                                  className={`text-center ${EmployerDetailsStyle.Emailsendbutton}`}\r\n                                  onClick={() =>\r\n                                    setShow((prev) => ({\r\n                                      ...prev,\r\n                                      resendIntro: true,\r\n                                    }))\r\n                                  }\r\n                                >\r\n                                  Intro Email\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n              {showEmployerSendSLA && (\r\n                <EmployerSendSLA\r\n                  Id={employerDetails.id}\r\n                  onClose={closeSLA}\r\n                  onSuccess={closeSLA}\r\n                  toEmail={employerDetails.emailId}\r\n                />\r\n              )}\r\n              {adminSignaturenot && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={5000}\r\n                    childComponent={\r\n                      <>\r\n                        <div style={{ width: \"300px\" }}>\r\n                          <div className=\"\">This admin has no signature </div>\r\n                          <div className=\"d-flex justify-content-end mt-2\">\r\n                            <div\r\n                              className=\"btn btn-danger \"\r\n                              onClick={() => {\r\n                                setadminSignaturenot(false);\r\n                              }}\r\n                            >\r\n                              Ok\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n              {isQualifiedDetails.openPopup && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={10000}\r\n                    childComponent={\r\n                      <ConfirmationPopup\r\n                        heading={\"Confirmation\"}\r\n                        headingText={isQualifiedDetails.confirmtext}\r\n                        onConfirm={ConfirmFormSubmit}\r\n                        // enableSubmit={enableSubmit}\r\n                        onRequestClose={handleConfirmationClose}\r\n                        //</br> with <b>${contactPersonName}</b>\r\n                      />\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n              {showSuccess && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={2000}\r\n                    childComponent={\r\n                      <SuccessTick HeadText=\"Successfully Updated\" />\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n\r\n              {show.resendIntro && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={10006}\r\n                    childComponent={\r\n                      <>\r\n                        <div>\r\n                          <div className=\" my-3\">\r\n                            Resend Intro mail to\r\n                            <b> {employerDetails.companyName}</b>\r\n                          </div>\r\n\r\n                          <div className=\"d-grid justify-content-center\">\r\n                            <form\r\n                              onSubmit={(e) => {\r\n                                handleIntroMailResend(e);\r\n                              }}\r\n                              className=\"d-grid justify-content-center \"\r\n                              action=\"\"\r\n                            >\r\n                              {/* {isSuperAdmin && ( */}\r\n                              <>\r\n                                <Box sx={{ minWidth: 120 }}>\r\n                                  <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                      Intro Mail From\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                      MenuProps={{\r\n                                        style: {\r\n                                          zIndex: 10007,\r\n                                        },\r\n                                      }}\r\n                                      labelId=\"demo-simple-select-label\"\r\n                                      id=\"demo-simple-select\"\r\n                                      name=\"fromAdminId\"\r\n                                      value={mailDetails.fromAdminId.val}\r\n                                      label=\"Intro Mail From\"\r\n                                      onChange={(e) => {\r\n                                        handleFromAdminChange(e);\r\n                                      }}\r\n                                      required\r\n                                      autoComplete=\"off\"\r\n                                    >\r\n                                      <MenuItem value={2}>Sowmiya</MenuItem>\r\n                                      <MenuItem value={4}>Anees</MenuItem>\r\n                                      <MenuItem value={7}>Saravanan</MenuItem>\r\n                                      <MenuItem value={13}>Nirmala</MenuItem>\r\n                                      <MenuItem value={19}>Dinesh</MenuItem>\r\n                                    </Select>\r\n                                  </FormControl>\r\n                                </Box>\r\n                              </>\r\n                              {/* )} */}\r\n                              <div className=\"mt-3\">\r\n                                <TextField\r\n                                  id=\"outlined-basic\"\r\n                                  label=\"CC mail\"\r\n                                  variant=\"outlined\"\r\n                                  // required\r\n                                  onChange={handleIntroMailChange}\r\n                                  value={mailDetails.ccMail.val}\r\n                                  // helperText={\"Plase\"}\r\n                                  // error={true}\r\n                                  helperText={mailDetails.ccMail.err}\r\n                                  error={Boolean(mailDetails.ccMail.err)}\r\n                                />\r\n                              </div>\r\n                              <div className=\"mt-3\">\r\n                                <TextField\r\n                                  id=\"outlined-basic\"\r\n                                  label=\"Payment Policy (in days)\"\r\n                                  variant=\"outlined\"\r\n                                  required\r\n                                  inputProps={{ maxLength: 2 }}\r\n                                  onChange={handlePaymentChange}\r\n                                  value={mailDetails.paymentDays.val}\r\n                                  // helperText={\"Plase\"}\r\n                                  // error={true}\r\n                                  helperText={mailDetails.paymentDays.err}\r\n                                  error={Boolean(mailDetails.paymentDays.err)}\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\" d-flex justify-content-center gap-3 flex-row mt-3\">\r\n                                <Button\r\n                                  onClick={(e) => {\r\n                                    handleClose(e);\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                  color=\"error\"\r\n                                  type=\"button\"\r\n                                  size=\"small\"\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n\r\n                                <LoadingButton\r\n                                  loading={isLoading}\r\n                                  type=\"submit\"\r\n                                  size=\"small\"\r\n                                  variant=\"contained\"\r\n                                  disabled={isLoading}\r\n                                >\r\n                                  Resend\r\n                                </LoadingButton>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  ></ModalContainer>\r\n                </MyModal>\r\n              )}\r\n\r\n              {show.showSuccess && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={10010}\r\n                    childComponent={\r\n                      <>\r\n                        <SuccessTick HeadText=\"Into mail send\" />\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n              {/* {showSuccess && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={10000}\r\n                    childComponent={<SuccessTick HeadText=\"Successfully\" />}\r\n                  />\r\n                </MyModal>\r\n              )} */}\r\n            </>\r\n          }\r\n        />\r\n      </Detailsshow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployerLeadDetailsView;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Pagination,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  tableCellClasses,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport FBstyle from \"../../Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport canLeadStyle from \"../../Candidate/CandidateLeadTable/candidateLead.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EmployerLeadFilter from \"./EmployerLeadFilter\";\r\nimport EmployerSendSLA from \"./sendSLA\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  GetEmployerLeadList,\r\n  PutEmployerLeadCheck,\r\n} from \"../../../apiServices\";\r\nimport RegisterCandidateStyle from \"../../Candidate/CandidateRegistered/RegisteredCandidate.module.scss\";\r\nimport {\r\n  DDMMYYYY_formate,\r\n  MyModal,\r\n  capitalizeWords,\r\n  textTruncate,\r\n} from \"../../../utility\";\r\nimport { Stack } from \"rsuite\";\r\nimport {\r\n  EmployerLeadActions,\r\n  employerTimelineActions,\r\n} from \"../../../redux-store/store\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { AiOutlineClose, AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport ConfirmationPopup from \"../../../components/ModalPopups/confirmationPopup\";\r\nimport EmployerLeadTimeline from \"./LeadTimeLine/TimelineView\";\r\nimport EmployerLeadDetailsView from \"../../../components/ModalPopups/EmployerPopup/EmployerLeadDetailsView\";\r\nimport EmployerLeadPost from \"./EmployerLeadPost\";\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#d2d2d2\",\r\n    color: \"#545454f0\",\r\n    padding: \"8px\",\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    padding: \"8px\",\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n}));\r\n\r\nfunction EmployerLeadTable() {\r\n  const EmployerLead = useSelector(\r\n    (state) => state.EmployerLeadDetails.EmployerLeadFilter\r\n  );\r\n  const timelineDetails = useSelector(\r\n    (state) => state.employerTimeline.employerLeadTimeline\r\n  );\r\n  const totalPage = useRef(0);\r\n  const [enableSubmit, setEnableSubmit] = useState(false);\r\n  const [EmployerLeadList, setEmployerLeadList] = useState([]);\r\n  const [showEmployerSendSLA, setShowEmployerSendSLA] = useState(false);\r\n  const [currentCandidateDetail, setCurrentCandidateDetails] = useState();\r\n  const [leadCount, setLeadCount] = useState(\"\");\r\n  const [showLoader, setShowLoader] = useState(false); // New state for loader\r\n  const [addnewleadopen, setAddnewLeadOpen] = useState(false);\r\n  const [showConfirmationPopup, setShowConfirmPopup] = useState(false);\r\n  const [putLead, setputLead] = useState({\r\n    empLeadId: \"\",\r\n    qualified: false,\r\n    notQualified: false,\r\n  });\r\n  const [selectedId, setSelectedId] = useState();\r\n  const [leadDetails, setLeadDetails] = useState({\r\n    show: false,\r\n    date: {},\r\n  });\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n  const [adminName, setAdminName] = useState([]);\r\n  const [adminid, setAdminId] = useState([]);\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminNames = data.map((item) => item.userName);\r\n      const adminIds = data.map((item) => item.id);\r\n      setAdminName(adminNames);\r\n      setAdminId(adminIds);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(EmployerLead);\r\n  }, [EmployerLead]);\r\n  const showLeadDetails = (data, show) => {\r\n    setLeadDetails((prev) => ({ ...prev, data: data, show: show }));\r\n  };\r\n  const Dispatch = useDispatch();\r\n  useEffect(() => {\r\n    GetEmployerLeadList(EmployerLead)\r\n      .then((data) => {\r\n        console.log(data, \"metaLeadsList data\");\r\n        setEmployerLeadList(data.data.content);\r\n        setLeadCount(data.data.totalElements);\r\n        totalPage.current = data.data.totalPages;\r\n      })\r\n      .catch(() => {\r\n        setEmployerLeadList([]);\r\n        totalPage.current = 1;\r\n      });\r\n  }, [EmployerLead]);\r\n  function candidatePagination(event, page) {\r\n    const currentPage = page - 1;\r\n    console.log(currentPage, \"current page\");\r\n    Dispatch(EmployerLeadActions.setEmployerLeadFilterPage(currentPage));\r\n  }\r\n  function candidateSize(size) {\r\n    Dispatch(EmployerLeadActions.setEmployerLeadFilterSize(size));\r\n  }\r\n\r\n  const closeSLA = () => {\r\n    setShowEmployerSendSLA(false);\r\n  };\r\n\r\n  const inputRef = {\r\n    qualified: useRef(),\r\n    notQualified: useRef(),\r\n    // rescheduled: useRef(),\r\n  };\r\n  const handleButtonClick = (refName) => {\r\n    const ref = inputRef[refName];\r\n    if (ref && ref.current) {\r\n      ref.current.click();\r\n      // console.log(employerId, \"refcurrent\");\r\n    }\r\n  };\r\n  function currentCanDetails(data) {\r\n    // console.log(data, \"Current Dataaaaaa\");\r\n    setCurrentCandidateDetails(data);\r\n  }\r\n\r\n  function handleConfirmationClose() {\r\n    setShowConfirmPopup(false);\r\n  }\r\n\r\n  function handleConfirmationOpen() {\r\n    setShowConfirmPopup(true);\r\n  }\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const handleCheckboxClick = () => {\r\n    // event.stopPropagation();\r\n    setIsChecked(!isChecked);\r\n  };\r\n  const handleIsQualified = (empLeadId, status, event) => {\r\n    let isChecked = event.target.checked;\r\n    console.log(event.target.checked, \"target\");\r\n\r\n    if (isChecked) {\r\n      if (status === \"qualified\") {\r\n        setputLead({\r\n          empLeadId: currentCandidateDetail.id,\r\n          qualified: true,\r\n          notQualified: false,\r\n        });\r\n      } else {\r\n        setputLead((prev) => ({\r\n          ...prev,\r\n          empLeadId: currentCandidateDetail.id,\r\n          qualified: false,\r\n          notQualified: true,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  function ConfirmFormSubmit() {\r\n    console.log(putLead.empLeadId, \"sjadj\");\r\n    if (putLead.empLeadId) {\r\n      setEnableSubmit(true);\r\n      PutEmployerLeadCheck(putLead).then(() => {\r\n        setShowConfirmPopup(false);\r\n        setEnableSubmit(false);\r\n        GetEmployerLeadList(EmployerLead)\r\n          .then((res) => {\r\n            // setLoading(false);\r\n            // console.log(res, \"response Data\");\r\n            setEmployerLeadList(res.data.content);\r\n            totalPage.current = res.data.totalPages;\r\n          })\r\n          .catch(() => {\r\n            setEmployerLeadList([]);\r\n          });\r\n      });\r\n    }\r\n  }\r\n  function handleTimelineOpen(el) {\r\n    // setTimeline((prev) => ({ ...prev, empLeadId: el.id, showTimeline: true }));\r\n    setSelectedId(el.id);\r\n    Dispatch(employerTimelineActions.setShowEmpLeadTimeline(true));\r\n  }\r\n  const Reloadresponse = () => {\r\n    GetEmployerLeadList(EmployerLead)\r\n      .then((res) => {\r\n        // setLoading(false);\r\n        // console.log(res, \"response Data\");\r\n        setEmployerLeadList(res.data.content);\r\n        totalPage.current = res.data.totalPages;\r\n      })\r\n      .catch(() => {\r\n        setEmployerLeadList([]);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`${FBstyle.FilterHead}`}>\r\n        {\" \"}\r\n        <div className=\"d-flex \">\r\n          Show {\"  \"}\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            className=\"px-1 py-1 mx-2\"\r\n            onChange={(event) => candidateSize(event.target.value)}\r\n          >\r\n            <option selected value=\"10\">\r\n              10\r\n            </option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </select>\r\n          {\"   \"}\r\n          Entries\r\n        </div>\r\n        <div className={`${canLeadStyle.filterAdduser}`}>\r\n          <div className=\"mt-2 me-2\">Total Count : {leadCount}</div>\r\n          <EmployerLeadFilter />\r\n          {/* <Link\r\n            style={{ textDecoration: \"none\" }}\r\n            to={{ pathname: \"/Employer_lead\" }}\r\n          > */}\r\n          <button\r\n            className={`ms-2 ${canLeadStyle.NewLead}`}\r\n            onClick={() => setAddnewLeadOpen(true)}\r\n          >\r\n            <AiOutlineUserAdd /> Add New Lead\r\n          </button>\r\n          {/* </Link> */}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={`${FBstyle.Container}`}>\r\n          <div className={`table-responsive-sm ${FBstyle.responsive}`}>\r\n            <TableContainer className={`${FBstyle.TableContainer}`}>\r\n              <Table stickyHeader aria-label=\"sticky table\" className={``}>\r\n                <TableHead className={`${FBstyle.Header}`}>\r\n                  <TableRow>\r\n                    <StyledTableCell>Contact Person Name</StyledTableCell>\r\n                    <StyledTableCell>Company Name</StyledTableCell>\r\n                    <StyledTableCell>Mobile Number</StyledTableCell>\r\n                    <StyledTableCell>Industry</StyledTableCell>\r\n                    {/* <StyledTableCell>Area</StyledTableCell> */}\r\n                    <StyledTableCell>City</StyledTableCell>\r\n                    {isSuperAdmin && (\r\n                      <StyledTableCell>Assigned By</StyledTableCell>\r\n                    )}\r\n                    <StyledTableCell>Created on</StyledTableCell>\r\n                    <StyledTableCell>Status</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {EmployerLeadList.length > 0 ? (\r\n                    <>\r\n                      {EmployerLeadList.map((Employer, i) => {\r\n                        return (\r\n                          <>\r\n                            <TableRow\r\n                              key={i}\r\n                              sx={{\r\n                                \"&:last-child td, &:last-child th\": {\r\n                                  border: 0,\r\n                                },\r\n                              }}\r\n                              onClick={() => {\r\n                                currentCanDetails(Employer);\r\n                              }}\r\n                            >\r\n                              <StyledTableCell\r\n                                sx={{ color: \"#0b7af0\", cursor: \"pointer\" }}\r\n                                title={Employer.contactPersonName}\r\n                                // onClick={(e) => {\r\n                                //   setIsPopupOpenEmpLead(true);\r\n                                //   handleCandidateClick(Employer.id);\r\n                                // }}\r\n                                onClick={() => {\r\n                                  showLeadDetails(Employer, true);\r\n                                }}\r\n                              >\r\n                                {Employer.contactPersonName\r\n                                  ? textTruncate(Employer.contactPersonName, 20)\r\n                                  : \"-\"}\r\n                              </StyledTableCell>\r\n\r\n                              <StyledTableCell\r\n                                // sx={{ color: \"#0b7af0\", cursor: \"pointer\" }}\r\n                                title={Employer.companyName}\r\n                                // onClick={() => {\r\n                                //   handlePopupDetails(\r\n                                //     Employer.id,\r\n                                //     \"employerDetails\"\r\n                                //   );\r\n                                // }}\r\n                              >\r\n                                {Employer.companyName\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(Employer.companyName),\r\n                                      20\r\n                                    )\r\n                                  : \"-\"}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell>\r\n                                {Employer.mobileNumber\r\n                                  ? String(Employer.mobileNumber).slice(0, 10)\r\n                                  : \"\"}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell title={Employer.industry}>\r\n                                {Employer.industry\r\n                                  ? textTruncate(Employer.industry, 20)\r\n                                  : \"-\"}\r\n                              </StyledTableCell>\r\n                              {/* <StyledTableCell>\r\n                                {Employer.city ? Employer.city : \"-\"}\r\n                              </StyledTableCell> */}\r\n                              <StyledTableCell>\r\n                                {Employer.city ? Employer.city : \"-\"}\r\n                              </StyledTableCell>\r\n                              {isSuperAdmin && (\r\n                                <StyledTableCell align=\"left\">\r\n                                  <>\r\n                                    {\r\n                                      adminName[\r\n                                        adminid.indexOf(Employer.assignTo)\r\n                                      ]\r\n                                    }\r\n                                  </>\r\n                                </StyledTableCell>\r\n                              )}\r\n                              <StyledTableCell>\r\n                                <DDMMYYYY_formate\r\n                                  dateValue={Employer.createdTime}\r\n                                />\r\n                              </StyledTableCell>\r\n                              <StyledTableCell>\r\n                                <div\r\n                                  className={`${RegisterCandidateStyle.Status}`}\r\n                                >\r\n                                  <div>\r\n                                    {Employer.qualified === true && (\r\n                                      <>\r\n                                        <div\r\n                                          className={`${RegisterCandidateStyle.qualified}`}\r\n                                        >\r\n                                          Qualified\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n\r\n                                    {Employer.notQualified === true && (\r\n                                      <>\r\n                                        <div\r\n                                          className={`${RegisterCandidateStyle.Notqualified}`}\r\n                                        >\r\n                                          Not Qualified\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"btn-group dropstart\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      // className={`btn btn-light `}\r\n\r\n                                      data-bs-toggle=\"dropdown\"\r\n                                      data-bs-no-caret=\"true\"\r\n                                      aria-expanded=\"false\"\r\n                                      style={{\r\n                                        border: \"none\",\r\n                                        background: \"none\",\r\n                                        color: \"#000\",\r\n                                        cursor: \"pointer\",\r\n                                        outline: \"none\",\r\n                                        position: \"relative\",\r\n                                        right: \"5px\",\r\n                                        // backgroundColor: \"red\",\r\n                                        fontSize: 20,\r\n                                        zIndex: 1,\r\n                                      }}\r\n                                    >\r\n                                      <span className=\"\">\r\n                                        {\" \"}\r\n                                        <BsThreeDotsVertical />{\" \"}\r\n                                      </span>\r\n                                      {/* <AiOutlineEdit /> */}\r\n                                    </button>{\" \"}\r\n                                    <ul\r\n                                      className=\"dropdown-menu\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                      // ref={dropdownRef}\r\n                                    >\r\n                                      <li\r\n                                        onClick={() =>\r\n                                          handleButtonClick(\"qualified\")\r\n                                        }\r\n                                      >\r\n                                        <a className=\"dropdown-item\" href=\"#\">\r\n                                          <div\r\n                                            className={`${FBstyle.select_wrp}`}\r\n                                          >\r\n                                            <input\r\n                                              ref={inputRef.qualified}\r\n                                              type=\"radio\"\r\n                                              checked={Employer.qualified}\r\n                                              name={`status_${Employer.id}`}\r\n                                              id={`qualified_${Employer.id}`}\r\n                                              onChange={(event) => {\r\n                                                handleConfirmationOpen(true);\r\n                                                handleIsQualified(\r\n                                                  Employer.id,\r\n                                                  \"qualified\",\r\n                                                  event\r\n                                                );\r\n                                              }}\r\n                                              onClick={(event) => {\r\n                                                handleCheckboxClick(event);\r\n                                              }}\r\n                                            />\r\n                                            <label\r\n                                              htmlFor={`qualified_${Employer.id}`}\r\n                                            >\r\n                                              <GoDotFill\r\n                                                style={{\r\n                                                  color: \"#169C50\",\r\n                                                  fontSize: 20,\r\n                                                }}\r\n                                              />{\" \"}\r\n                                              Qualified\r\n                                            </label>\r\n                                          </div>\r\n                                        </a>\r\n                                      </li>\r\n                                      <li\r\n                                        onClick={() =>\r\n                                          handleButtonClick(\"notQualified\")\r\n                                        }\r\n                                      >\r\n                                        <a className=\"dropdown-item\" href=\"#\">\r\n                                          <div\r\n                                            className={`${FBstyle.select_wrp}`}\r\n                                          >\r\n                                            <input\r\n                                              ref={inputRef.notQualified}\r\n                                              type=\"radio\"\r\n                                              checked={Employer.notQualified}\r\n                                              name={`status_${Employer.id}`}\r\n                                              id={`notQualified_${Employer.id}`}\r\n                                              onChange={(event) => {\r\n                                                handleConfirmationOpen(true);\r\n                                                handleIsQualified(\r\n                                                  Employer.id,\r\n                                                  \"notQualified\",\r\n                                                  event\r\n                                                );\r\n                                              }}\r\n                                              onClick={(event) => {\r\n                                                handleCheckboxClick(event);\r\n                                              }}\r\n                                            />\r\n                                            <label\r\n                                              htmlFor={`notQualified_${Employer.id}`}\r\n                                            >\r\n                                              <GoDotFill\r\n                                                style={{\r\n                                                  color: \"#b2261c\",\r\n                                                  fontSize: 20,\r\n                                                }}\r\n                                              />{\" \"}\r\n                                              Not Qualified\r\n                                            </label>\r\n                                          </div>\r\n                                        </a>\r\n                                      </li>\r\n                                      {/* <li\r\n                                        onClick={() =>\r\n                                          handleTimelineOpen(Employer)\r\n                                        }\r\n                                      >\r\n                                        {/* <a href=\"\"> \r\n                                        <div className=\"dropdown-item\">\r\n                                          <label htmlFor=\"\">\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#16617b\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />{\" \"}\r\n                                            Show TimeLine\r\n                                          </label>\r\n                                        </div>\r\n                                        {/* </a> \r\n                                      </li> */}\r\n                                      <li\r\n                                        onClick={() =>\r\n                                          setShowEmployerSendSLA(\r\n                                            !showEmployerSendSLA\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <div className=\"dropdown-item\">\r\n                                          <label htmlFor=\"\">\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#16617b\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />{\" \"}\r\n                                            Send SLA\r\n                                          </label>\r\n                                        </div>\r\n                                      </li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n                              </StyledTableCell>\r\n                            </TableRow>\r\n                            {showEmployerSendSLA && (\r\n                              <EmployerSendSLA\r\n                                Id={currentCandidateDetail.id}\r\n                                onClose={closeSLA}\r\n                                onSuccess={closeSLA}\r\n                                toEmail={currentCandidateDetail.emailId}\r\n                              />\r\n                            )}\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h6 className=\"text-danger\">Not Found</h6>\r\n                    </>\r\n                  )}\r\n                </TableBody>\r\n                {showConfirmationPopup && (\r\n                  <MyModal>\r\n                    <ModalContainer\r\n                      // zIndex={2}\r\n                      childComponent={\r\n                        <>\r\n                          <ConfirmationPopup\r\n                            heading={\"Confirmation\"}\r\n                            headingText={`Are you sure you want to update <b> ${currentCandidateDetail.companyName}</b>`}\r\n                            onConfirm={ConfirmFormSubmit}\r\n                            enableSubmit={enableSubmit}\r\n                            onRequestClose={handleConfirmationClose}\r\n                          />\r\n                        </>\r\n                      }\r\n                    />\r\n                  </MyModal>\r\n                )}\r\n              </Table>\r\n              {/* {isPopupOpenEmpLead && selectedEmployerId && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    childComponent={\r\n                      <>\r\n                        <EmployerLeadPopup\r\n                          id={selectedEmployerId}\r\n                          onClose={handleClose}\r\n                        />\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )} */}\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center align-items-center mb-3 position-absolute bottom-0 start-50 translate-middle-x\">\r\n          <Stack spacing={2}>\r\n            <Pagination\r\n              count={totalPage.current}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              color=\"success\"\r\n              boundaryCount={1}\r\n              siblingCount={0}\r\n              size=\"medium\"\r\n              onChange={candidatePagination}\r\n            />\r\n          </Stack>\r\n        </div>\r\n        <Backdrop\r\n          sx={{\r\n            color: \"#fff\",\r\n            zIndex: (theme) => theme.zIndex.drawer + 1,\r\n          }}\r\n          open={showLoader}\r\n          onClick={() => {}} // Prevent closing on backdrop click\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        {addnewleadopen && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div className=\"p-2\" style={{ width: \"800px\" }}>\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                      <div className=\"fs-4\">\r\n                        <b>Employer Lead Generation</b>\r\n                      </div>\r\n                      <div\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={() => {\r\n                          setAddnewLeadOpen(false);\r\n                        }}\r\n                      >\r\n                        <AiOutlineClose />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"\"\r\n                      style={{ height: \"65vh\", overflow: \"auto\" }}\r\n                    >\r\n                      <EmployerLeadPost\r\n                        oncloseLead={() => setAddnewLeadOpen(false)}\r\n                        reloeadpage={Reloadresponse}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n        {timelineDetails.showTimeline && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <EmployerLeadTimeline id={selectedId} />\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n        {leadDetails.show && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              // zIndex={2}\r\n              childComponent={\r\n                <>\r\n                  <EmployerLeadDetailsView\r\n                    onClose={() => {\r\n                      setShowLoader(true);\r\n                      setLeadDetails((prev) => ({ ...prev, show: false }));\r\n                      setShowLoader(false);\r\n                    }}\r\n                    employerDetails={leadDetails.data}\r\n                  />\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerLeadTable;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"BoxContainerWidth\":\"RegisteredCandidate_BoxContainerWidth__ndKSR\",\"flex-container\":\"RegisteredCandidate_flex-container__sW+Fi\",\"Status\":\"RegisteredCandidate_Status__OMeY8\",\"qualified\":\"RegisteredCandidate_qualified__bknLX\",\"Notqualified\":\"RegisteredCandidate_Notqualified__AW0Gj\",\"Followup\":\"RegisteredCandidate_Followup__6isun\"};"],"names":["showFilter","setShowFilter","useState","EmployerLead","useSelector","state","EmployerLeadDetails","EmployerLeadFilter","EmployerLeadRedDot","refreshRedDot","size","create","createdTimeStart","ended","createdTimeEnd","initialState","mobile_number","email_id","city","industry","company_name","formData","setFormData","options","setOptions","area","dateRange","setDateRange","start","end","dateFilterType","showCustom","setshowCustom","validationErrors","setValidationErrors","showRedDot","setShowRedDot","anchorEl","setAnchorEl","React","open","Boolean","handleDateSelect","val","selectedOption","today","Date","endDate","startDate","setDate","getDate","prev","toISOString","split","setMonth","getMonth","handleCustomDate","value","type","target","useEffect","console","log","getJobFilterOptions","then","data","IndustryOptions","filter","el","category","cityOptions","element","areaOptions","updateCity","event","updateIndustry","Dispatch","useDispatch","handleFieldChange","field","numbersOnlyTest","_jsx","children","_jsxs","className","concat","FBStyle","Filterbutton","variant","onClick","BiFilterAlt","style","backgroundColor","width","height","borderRadius","MyModal","ModalContainer","zIndex","childComponent","_Fragment","e","preventDefault","EmployerLeadActions","setEmployerLeadFilter","page","cursor","fontSize","AiOutlineClose","BoxContainerWidth","onSubmit","isFilterApplied","setEmployerLeadRedDot","handleSubmit","Stack","TextField","id","label","fullWidth","onChange","inputProps","maxLength","InputProps","startAdornment","display","alignItems","AiOutlinePhone","marginRight","FormControl","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","minWidth","htmlFor","name","min","max","isFormValid","isValid","placeholder","Autocomplete","reason","map","option","getOptionLabel","filterSelectedOptions","renderInput","params","handleClear","search","sx","EmployerSendSLA","_ref","onSuccess","Id","toEmail","adminDetails","adminId","localStorage","getItem","isSuperAdmin","roleID","empId","empLeadId","fromAdminId","err","RecruitmentFeePercentage","ReplacementPolicy","PaymentTerms","PaymentType","ccEmailId","showForm","setShowForm","adminSignaturenot","setadminSignaturenot","responseDetails","setResponseDetails","isLoading","completed","failed","buttonSx","bgcolor","green","handleInputChange","test","ccEmailArray","email","trim","PostSlaMail","statusCode","setTimeout","catch","alert","Box","InputLabel","Select","MenuProps","labelId","handleFromAdminChange","required","autoComplete","marginTop","margin","mt","m","position","Button","color","handleClose","disabled","CircularProgress","top","left","marginLeft","dataObject","close","details","CloseIcon","eventName","dangerouslySetInnerHTML","__html","eventDescription","notes","Ddmmmyyyy_date","dateValue","createdTime","EmployerLeadTimeline","timeLine","setTimeLine","content","totalPages","timeLineDetails","setTimeLineDetails","showPopup","timelineFilter","employerTimeline","employerLeadTimeline","setPage","GetEmpLeadTimeline","res","Timeline","timelineOppositeContentClasses","root","flex","timeLineWrp","length","index","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Card","textTruncate","Pagination","count","currentPage","siblingCount","hidePrevButton","hideNextButton","TimeLineDetails","EmpLeadAddTimeLineForm","eventType","eventOptions","setEventOptions","maxWidth","CardContent","PostEmpLeadTimeLine","multiline","helperText","muiStyled","clip","clipPath","overflow","bottom","whiteSpace","employerDetails","adminName","setAdminName","adminid","setAdminId","assignToName","setAssignToName","showSuccess","setShowSuccess","emailsendshow","setEmailsendshow","isQualifiedDetails","setIsQualifiedDetails","confirmtext","qualified","notQualified","openPopup","activeTab","setActiveTab","setIsLoading","showEmployerSendSLA","setShowEmployerSendSLA","ShowModal","SetShowModal","setOpen","showLoader","setShowLoader","assignAdminto","setAssignAdminto","candidateId","setAdminDetails","mailDetails","setMailDetails","ccMail","paymentDays","leadId","show","setShow","resendIntro","showScheduleInterview","setShowScheduleInterview","window","location","href","isShowScheduleInterview","includes","documentTitles","setDocumentTitles","handleTabClick","tabNumber","useRef","closeSLA","openIsQualifyPopup","status","isQualified","confirmText","companyName","handleWhatsAppIconClick","phoneNumber","whatsappURL","isCopied","setIsCopied","handleCopyNumber","whatsappNumber","navigator","clipboard","writeText","GetAllsdminDetails","adminNames","item","userName","adminIds","Detailsshow","DetailsContainer","topComponent","EmployerDetailsStyle","boxcross","CrossStyle","RxCross2","boxwidth","topcontainer","companyLogo","src","alt","companylogo","StatusStyle","Green_wrp","checked","chips_wrp","border","background","outline","right","BsThreeDotsVertical","AiOutlineEdit","textAlign","select_wrp","GoDotFill","Createdon","DDMMYYYY_formate","flexContainer","LiaUserEditSolid","FaWhatsapp","SendEmail","MdEmail","class","ThreeOutline","PiDotsThreeOutlineVerticalFill","ScheduleInterview","MdCall","mobileNumber","MdOutlineContentCopy","webConsoleBaseUrl","textDecoration","personalDetails","CanDetailsRow","lineHeight","noOfEmployees","regProofNumber","kycStatus","yearFounded","reference","address","contactPersonName","emailId","numbersstyle","flag","Phonecall","Whatsapnumbersstyle","WhatsappImage","employer","contactDetailsFilled","fromWeb","fromApp","fromAdmin","indexOf","assignTo","DailyDetailsupdate","candidateTabsviewStyle","tab_buttons","tab_hr","activetag","unactivetag","borderTop","tab_content","Backdrop","theme","drawer","BoxWidthchildComponent","RxCrossCircled","Emailsendbutton","ConfirmationPopup","heading","headingText","onConfirm","PutEmployerLeadCheck","onRequestClose","SuccessTick","HeadText","error","emailValidation","PostIntroMail","finally","handleIntroMailResend","action","LoadingButton","loading","StyledTableCell","styled","TableCell","tableCellClasses","head","padding","body","timelineDetails","totalPage","enableSubmit","setEnableSubmit","EmployerLeadList","setEmployerLeadList","currentCandidateDetail","setCurrentCandidateDetails","leadCount","setLeadCount","addnewleadopen","setAddnewLeadOpen","showConfirmationPopup","setShowConfirmPopup","putLead","setputLead","selectedId","setSelectedId","leadDetails","setLeadDetails","date","GetEmployerLeadList","totalElements","current","inputRef","handleButtonClick","refName","ref","click","handleConfirmationOpen","isChecked","setIsChecked","handleCheckboxClick","handleIsQualified","FBstyle","FilterHead","candidateSize","setEmployerLeadFilterSize","selected","canLeadStyle","filterAdduser","NewLead","AiOutlineUserAdd","Container","responsive","TableContainer","Table","stickyHeader","TableHead","Header","TableRow","TableBody","Employer","i","title","showLeadDetails","capitalizeWords","String","slice","align","RegisterCandidateStyle","Status","Notqualified","spacing","shape","boundaryCount","setEmployerLeadFilterPage","EmployerLeadPost","oncloseLead","reloeadpage","Reloadresponse","showTimeline","EmployerLeadDetailsView"],"sourceRoot":""}